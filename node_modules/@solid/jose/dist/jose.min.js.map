{"version":3,"sources":["webpack://JOSE/webpack/bootstrap","webpack://JOSE/./node_modules/@trust/json-document/lib/index.js","webpack://JOSE/./node_modules/base64url/index.js","webpack://JOSE/./lib/schemas/JWKSchema.js","webpack://JOSE/./node_modules/buffer/index.js","webpack://JOSE/./node_modules/@trust/json-document/lib/JSONPointer.js","webpack://JOSE/./lib/jose/JWA.js","webpack://JOSE/./lib/jose/JWS.js","webpack://JOSE/./lib/schemas/JOSEHeaderSchema.js","webpack://JOSE/./lib/schemas/JWTClaimsSetSchema.js","webpack://JOSE/./lib/schemas/Base64URLSchema.js","webpack://JOSE/./lib/schemas/JWTSchema.js","webpack://JOSE/./lib/schemas/JWKSetSchema.js","webpack://JOSE/./node_modules/@trust/json-document/lib/Validator.js","webpack://JOSE/./node_modules/@trust/json-document/lib/JSONPatch.js","webpack://JOSE/./node_modules/@trust/json-document/lib/Initializer.js","webpack://JOSE/./node_modules/@trust/json-document/lib/Formats.js","webpack://JOSE/./lib/jose/JWK.js","webpack://JOSE/./lib/errors/DataError.js","webpack://JOSE/./lib/errors/index.js","webpack://JOSE/./lib/errors/NotSupportedError.js","webpack://JOSE/./lib/text-encoder/index.js","webpack://JOSE/external \"crypto\"","webpack://JOSE/(webpack)/buildin/global.js","webpack://JOSE/./lib/jose/JWT.js","webpack://JOSE/./lib/jose/JWKSet.js","webpack://JOSE/./lib/formats/index.js","webpack://JOSE/./node_modules/@trust/json-document/lib/JSONSchema.js","webpack://JOSE/./node_modules/@trust/json-document/lib/JSONMapping.js","webpack://JOSE/./node_modules/@trust/json-document/lib/JSONDocument.js","webpack://JOSE/./lib/algorithms/SupportedAlgorithms.js","webpack://JOSE/./lib/algorithms/RSASSA-PKCS1-v1_5.js","webpack://JOSE/external \"TextEncoder\"","webpack://JOSE/./lib/algorithms/HMAC.js","webpack://JOSE/./lib/algorithms/NONE.js","webpack://JOSE/./lib/algorithms/index.js","webpack://JOSE/./node_modules/base64url/dist/pad-string.js","webpack://JOSE/./node_modules/isarray/index.js","webpack://JOSE/./node_modules/ieee754/index.js","webpack://JOSE/./node_modules/base64-js/index.js","webpack://JOSE/./node_modules/base64url/dist/base64url.js","webpack://JOSE/./lib/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Formats","Initializer","JSONDocument","JSONMapping","JSONPatch","JSONPointer","JSONSchema","Validator","default","JWKSchema","BASE64_REGEXP","type","properties","kty","enum","use","key_ops","items","alg","kid","x5u","x5c","x5t","global","base64","ieee754","isArray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","length","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","this","Error","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","len","checked","copy","buffer","val","data","fromObject","assertSize","size","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","push","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","e","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","_createClass","defineProperties","props","descriptor","writable","Constructor","protoProps","staticProps","THROW","expr","instance","_classCallCheck","tokens","charAt","parseURIFragmentIdentifier","parseJSONString","split","map","unescape","escape","decodeURIComponent","_this","token","encodeURIComponent","source","current","splice","supportedAlgorithms","NotSupportedError","JWA","normalizedAlgorithm","normalize","Promise","reject","sign","signature","verify","importKey","_slicedToArray","iterator","_n","_d","_e","_s","_i","next","done","err","sliceIterator","base64url","DataError","JWS","payload","JSON","stringify","serialization","header","then","jwt","signatures","_jwt$segments","segments","verified","resolve","JOSEHeaderSchema","typ","cty","format","jku","crit","minItems","enc","zip","JWTClaimsSetSchema","iss","aud","exp","nbf","iat","jti","Base64URLSchema","JWTSchema","protected","unprotected","iv","aad","ciphertext","tag","recipients","encrypted_key","JWKSetSchema","keys","_typeof","constructor","formats","indexCount","schema","options","assign","address","require","body","compile","Function","block","required","number","anyOf","allOf","not","oneOf","validations","keywords","filter","forEach","keyword","enumerated","conditions","subschema","validator","isRequired","validation","segment","pop","patternValidations","additionalValidations","patternProperties","pattern","_schema","additionalProperties","otherPropertiesCalled","otherProperties","minProperties","maxProperties","dependencies","dependency","item","_schema2","additionalItems","counter","index","maxItems","uniqueItems","minLength","maxLength","matcher","_schema3","minimum","exclusiveMinimum","_schema4","maximum","exclusiveMaximum","multipleOf","decimals","toFixed","OPERATIONS","ops","operation","op","path","add","remove","RegExp","pointer","root","depth","level","declarations","member","declaration","initializer","_index","console","log","stack","DATETIME_REGEXP","URI_REGEXP","EMAIL_REGEXP","IPV4_REGEXP","IPV6_REGEXP","HOSTNAME_REGEXP","test","register","initialize","JWK","_JSONDocument","self","ReferenceError","_possibleConstructorReturn","getPrototypeOf","subClass","superClass","setPrototypeOf","_inherits","jwk","_Error","message","TextEncoder","crypto","g","eval","window","JWT","jwks","find","cryptoKey","validate","valid","isJWE","JWE","encrypt","startsWith","parse","error","decode","encode","JWKSet","imported","importing","all","_defineProperty","writeable","isObject","extender","result","RECOVER","mapping","Map","right","left","alternate","patch","project","operations","SupportedAlgorithms","argument","registeredAlgorithms","SyntaxError","RSASSA_PKCS1_v1_5","params","algorithm","subtle","toBuffer","usages","HMAC","bitlength","None","define","hash","input","stringLength","diff","position","padLength","paddedStringLength","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","output","pad_string_1","fromBase64","toBase64"],"mappings":"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","file":"jose.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n","'use strict';\n\nmodule.exports = {\n  Formats: require('./Formats'),\n  Initializer: require('./Initializer'),\n  JSONDocument: require('./JSONDocument'),\n  JSONMapping: require('./JSONMapping'),\n  JSONPatch: require('./JSONPatch'),\n  JSONPointer: require('./JSONPointer'),\n  JSONSchema: require('./JSONSchema'),\n  Validator: require('./Validator')\n};","module.exports = require('./dist/base64url').default;\nmodule.exports.default = module.exports;\n","'use strict';\n\n/**\n * Dependencies\n * @ignore\n */\n\nvar _require = require('@trust/json-document'),\n    JSONSchema = _require.JSONSchema;\n\nvar _require2 = require('../formats'),\n    BASE64_REGEXP = _require2.BASE64_REGEXP;\n\n/**\n * JWK Schema\n */\n\n\nvar JWKSchema = new JSONSchema({\n  type: 'object',\n  properties: {\n\n    kty: {\n      type: 'string',\n      //format: 'case-sensitive',\n      enum: ['RSA', 'EC', 'oct'] // other values MAY be used\n    },\n\n    use: {\n      type: 'string',\n      //format: 'case-sensitive',\n      enum: ['sig', 'enc'] // other values MAY be used\n    },\n\n    key_ops: {\n      type: 'array',\n      //format: 'case-sensitive',\n      items: {\n        enum: ['sign', 'verify', 'encrypt', 'decrypt', 'wrapKey', 'unwrapKey', 'deriveKey', 'deriveBits'] // other values MAY be used\n      }\n    },\n\n    alg: {\n      type: 'string',\n      //format: 'case-sensitive',\n      enum: ['HS256', 'HS384', 'HS512', 'RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512', 'PS256', 'PS384', 'PS512', 'none'] // other values MAY be used\n    },\n\n    kid: {\n      type: 'string'\n    },\n\n    x5u: {\n      type: 'string'\n      //format: 'url'\n    },\n\n    x5c: {\n      type: 'array'\n      //format: BASE64_REGEXP\n    },\n\n    x5t: {\n      type: 'string'\n      //format: BASE64_REGEXP\n    }\n\n    //'x5t#S256': {\n    //  type: 'string',\n    //  //format: BASE64_REGEXP\n    //}\n  }\n});\n\n/**\n * Export\n */\nmodule.exports = JWKSchema;","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict';\n\n/**\n * Mode enumeration\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar THROW = 0;\nvar RECOVER = 1;\nvar SILENT = 2;\n\n/**\n * JSONPointer\n *\n * @class\n * Implements RFC 6901: JavaScript Object Notation (JSON) Pointer\n * https://tools.ietf.org/html/rfc6901\n */\n\nvar JSONPointer = function () {\n\n  /**\n   * Constructor\n   */\n  function JSONPointer(expr, mode) {\n    _classCallCheck(this, JSONPointer);\n\n    this.expr = expr;\n    this.mode = mode || THROW;\n    this.tokens = expr && expr.charAt(0) === '#' ? this.parseURIFragmentIdentifier(expr) : this.parseJSONString(expr);\n  }\n\n  /**\n   * Escape\n   */\n\n\n  _createClass(JSONPointer, [{\n    key: 'escape',\n    value: function escape(expr) {\n      return expr.replace(/~/g, '~0').replace(/\\//g, '~1');\n    }\n\n    /**\n     * Unescape\n     */\n\n  }, {\n    key: 'unescape',\n    value: function unescape(expr) {\n      return expr.replace(/~1/g, '/').replace(/~0/g, '~');\n    }\n\n    /**\n     * Parse\n     */\n\n  }, {\n    key: 'parseJSONString',\n\n\n    /**\n     * Parse JSON String\n     *\n     * @description Parse an expression into a list of tokens\n     * @param {string} expr\n     * @returns {Array}\n     */\n    value: function parseJSONString(expr) {\n      if (typeof expr !== 'string') {\n        throw new Error('JSON Pointer must be a string');\n      }\n\n      if (expr === '') {\n        return [];\n      }\n\n      if (expr.charAt(0) !== '/') {\n        throw new Error('Invalid JSON Pointer');\n      }\n\n      if (expr === '/') {\n        return [''];\n      }\n\n      return expr.substr(1).split('/').map(this.unescape);\n    }\n\n    /**\n     * To JSON String\n     *\n     * @description Render a JSON string representation of a pointer\n     * @returns {string}\n     */\n\n  }, {\n    key: 'toJSONString',\n    value: function toJSONString() {\n      return '/' + this.tokens.map(this.escape).join('/');\n    }\n\n    /**\n     * Parse URI Fragment Identifer\n     */\n\n  }, {\n    key: 'parseURIFragmentIdentifier',\n    value: function parseURIFragmentIdentifier(expr) {\n      if (typeof expr !== 'string') {\n        throw new Error('JSON Pointer must be a string');\n      }\n\n      if (expr.charAt(0) !== '#') {\n        throw new Error('Invalid JSON Pointer URI Fragment Identifier');\n      }\n\n      return this.parseJSONString(decodeURIComponent(expr.substr(1)));\n    }\n\n    /**\n     * To URI Fragment Identifier\n     *\n     * @description Render a URI Fragment Identifier representation of a pointer\n     * @returns {string}\n     */\n\n  }, {\n    key: 'toURIFragmentIdentifier',\n    value: function toURIFragmentIdentifier() {\n      var _this = this;\n\n      var value = this.tokens.map(function (token) {\n        return encodeURIComponent(_this.escape(token));\n      }).join('/');\n\n      return '#/' + value;\n    }\n\n    /**\n     * Get\n     *\n     * @description Get a value from the source object referenced by the pointer\n     * @param {Object} source\n     * @returns {*}\n     */\n\n  }, {\n    key: 'get',\n    value: function get(source) {\n      var current = source;\n      var tokens = this.tokens;\n\n      for (var i = 0; i < tokens.length; i++) {\n        if (!current || current[tokens[i]] === undefined) {\n          if (this.mode !== THROW) {\n            return undefined;\n          } else {\n            throw new Error('Invalid JSON Pointer reference');\n          }\n        }\n\n        current = current[tokens[i]];\n      }\n\n      return current;\n    }\n\n    /**\n     * Add\n     *\n     * @description Set a value on a target object referenced by the pointer. Put\n     * will insert an array element. To change an existing array elemnent, use\n     * `pointer.set()`\n     * @param {Object} target\n     * @param {*} value\n     */\n\n  }, {\n    key: 'add',\n    value: function add(target, value) {\n      var tokens = this.tokens;\n      var current = target;\n\n      // iterate through the tokens\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n\n        // set the property on the target location\n        if (i === tokens.length - 1) {\n          if (token === '-') {\n            current.push(value);\n          } else if (Array.isArray(current)) {\n            current.splice(token, 0, value);\n          } else if (value !== undefined) {\n            current[token] = value;\n          }\n\n          // handle missing target location based on \"mode\"\n        } else if (!current[token]) {\n          switch (this.mode) {\n            case THROW:\n              throw new Error('Invalid JSON Pointer reference');\n\n            case RECOVER:\n              current = current[token] = parseInt(token) ? [] : {};\n              break;\n\n            case SILENT:\n              return;\n\n            default:\n              throw new Error('Invalid pointer mode');\n          }\n\n          // reference the next object in the path\n        } else {\n          current = current[token];\n        }\n      }\n    }\n\n    /**\n     * Replace\n     *\n     * @description Set a value on a target object referenced by the pointer. Set will\n     * overwrite an existing array element at the target location.\n     * @param {Object} target\n     * @param {*} value\n     */\n\n  }, {\n    key: 'replace',\n    value: function replace(target, value) {\n      var tokens = this.tokens;\n      var current = target;\n\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n\n        if (i === tokens.length - 1) {\n          current[token] = value;\n        } else if (!current[token]) {\n          current = current[token] = parseInt(token) ? [] : {};\n        } else {\n          current = current[token];\n        }\n      }\n    }\n\n    /**\n     * Del\n     *\n     * - if this is an array it should splice the value out\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(target) {\n      var tokens = this.tokens;\n      var current = target;\n\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n\n        if (current === undefined || current[token] === undefined) {\n          return undefined;\n        } else if (Array.isArray(current)) {\n          current.splice(token, 1);\n          return undefined;\n        } else if (i === tokens.length - 1) {\n          delete current[token];\n        }\n\n        current = current[token];\n      }\n\n      // delete from the target\n    }\n  }], [{\n    key: 'parse',\n    value: function parse(expr) {\n      return new JSONPointer(expr);\n    }\n  }]);\n\n  return JSONPointer;\n}();\n\n/**\n * Exports\n */\n\n\nmodule.exports = JSONPointer;","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Dependencies\n *\n * TODO\n * - switch between Node.js webcrypto package and browser implementation\n */\nvar base64url = require('base64url');\nvar supportedAlgorithms = require('../algorithms');\n\nvar _require = require('../errors'),\n    NotSupportedError = _require.NotSupportedError;\n\n/**\n * JWA\n * https://tools.ietf.org/html/rfc7518\n */\n\n\nvar JWA = function () {\n  function JWA() {\n    _classCallCheck(this, JWA);\n  }\n\n  _createClass(JWA, null, [{\n    key: 'sign',\n\n\n    /**\n     * Sign\n     *\n     * @description\n     * Create a digital signature.\n     *\n     * @param {string} alg\n     * @param {CryptoKey} key\n     * @param {string|Buffer} data\n     *\n     * @return {Promise}\n     */\n    value: function sign(alg, key, data) {\n      // normalize the algorithm\n      var normalizedAlgorithm = supportedAlgorithms.normalize('sign', alg);\n\n      // validate algorithm is supported\n      if (normalizedAlgorithm instanceof Error) {\n        return Promise.reject(new NotSupportedError(alg));\n      }\n\n      // validate type of key\n      // TODO\n      //  - is the key suitable for the algorithm?\n      //  - does that get validated in webcrypto?\n      //if (key instanceof CryptoKey) {\n      //  return Promise.reject(new InvalidKeyError())\n      //}\n\n      // sign the data\n      return normalizedAlgorithm.sign(key, data);\n    }\n\n    /**\n     * Verify\n     *\n     * @description\n     * Verify a digital signature.\n     *\n     * @param {string} alg\n     * @param {CryptoKey} privateKey\n     * @param {string|Buffer} signature\n     * @param {string|Buffer} data\n     *\n     * @return {Promise}\n     */\n\n  }, {\n    key: 'verify',\n    value: function verify(alg, key, signature, data) {\n      var normalizedAlgorithm = supportedAlgorithms.normalize('verify', alg);\n\n      if (normalizedAlgorithm instanceof Error) {\n        return Promise.reject(new NotSupportedError(alg));\n      }\n\n      // TODO\n      // validate publicKey\n\n      // verify the signature\n      return normalizedAlgorithm.verify(key, signature, data);\n    }\n\n    /**\n     * Encrypt\n     */\n\n    /**\n     * Decrypt\n     */\n\n    /**\n     * Import\n     */\n\n  }, {\n    key: 'importKey',\n    value: function importKey(key) {\n      var normalizedAlgorithm = supportedAlgorithms.normalize('importKey', key.alg);\n      return normalizedAlgorithm.importKey(key);\n    }\n  }]);\n\n  return JWA;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = JWA;","'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Dependencies\n */\nvar base64url = require('base64url');\nvar JWA = require('./JWA');\n\nvar _require = require('../errors'),\n    DataError = _require.DataError;\n\n/**\n * JWS\n */\n\n\nvar JWS = function () {\n  function JWS() {\n    _classCallCheck(this, JWS);\n  }\n\n  _createClass(JWS, null, [{\n    key: 'sign',\n\n\n    /**\n     * sign\n     *\n     * @description\n     * Encode a JWT instance\n     *\n     * @param {Object} token\n     * @returns {Promise}\n     */\n    value: function sign(token) {\n      var payload = base64url(JSON.stringify(token.payload));\n\n      // compact serialization\n      if (token.serialization === 'compact') {\n        var key = token.key,\n            alg = token.header.alg;\n\n        var header = base64url(JSON.stringify(token.header));\n        var data = header + '.' + payload;\n\n        return JWA.sign(alg, key, data).then(function (signature) {\n          return data + '.' + signature;\n        });\n      }\n\n      // JSON serialization\n      if (token.serialization === 'json') {}\n\n      // Flattened serialization\n      if (token.serialization === 'flattened') {}\n\n      return Promise.reject(new DataError('Unsupported serialization'));\n    }\n\n    /**\n     * verify\n     */\n\n  }, {\n    key: 'verify',\n    value: function verify(jwt) {\n      // multiple signatures\n      if (jwt.signatures) {\n        // ...\n      }\n\n      var key = jwt.key,\n          signature = jwt.signature,\n          alg = jwt.header.alg;\n\n      // one signature\n\n      if (jwt.signature) {\n        var _jwt$segments = _slicedToArray(jwt.segments, 2),\n            header = _jwt$segments[0],\n            payload = _jwt$segments[1];\n\n        var data = header + '.' + payload;\n\n        if (alg === 'none') {\n          return Promise.reject(new DataError('Signature provided to verify with alg: none'));\n        }\n\n        return JWA.verify(alg, key, signature, data).then(function (verified) {\n          jwt.verified = verified;\n          return verified;\n        });\n      }\n\n      if (alg === 'none') {\n        if (!key && !signature) {\n          jwt.verified = true;\n\n          return Promise.resolve(true);\n        }\n\n        if (key) {\n          return Promise.reject(new DataError('Key provided to verify signature with alg: none'));\n        }\n      }\n\n      // no signatures to verify\n      return Promise.reject(new DataError('Missing signature(s)'));\n    }\n  }]);\n\n  return JWS;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = JWS;","'use strict';\n\n/**\n * Dependencies\n */\nvar JWKSchema = require('./JWKSchema');\n\nvar _require = require('@trust/json-document'),\n    JSONSchema = _require.JSONSchema;\n\n/**\n * JOSEHeaderSchema\n *\n * JSON Web Token (JWT)\n * https://tools.ietf.org/html/rfc7519#section-5\n *\n * 5.  JOSE Header\n *\n *   For a JWT object, the members of the JSON object represented by the\n *   JOSE Header describe the cryptographic operations applied to the JWT\n *   and optionally, additional properties of the JWT.  Depending upon\n *   whether the JWT is a JWS or JWE, the corresponding rules for the JOSE\n *   Header values apply.\n */\n\n\nvar JOSEHeaderSchema = new JSONSchema({\n  type: 'object',\n  properties: {\n\n    /**\n     * typ\n     *\n     * JSON Web Token (JWT)\n     * https://tools.ietf.org/html/rfc7519#section-5.1\n     *\n     * 5.1.  \"typ\" (Type) Header Parameter\n     *\n     *   The \"typ\" (type) Header Parameter defined by [JWS] and [JWE] is used\n     *   by JWT applications to declare the media type [IANA.MediaTypes] of\n     *   this complete JWT.  This is intended for use by the JWT application\n     *   when values that are not JWTs could also be present in an application\n     *   data structure that can contain a JWT object; the application can use\n     *   this value to disambiguate among the different kinds of objects that\n     *   might be present.  It will typically not be used by applications when\n     *   it is already known that the object is a JWT.  This parameter is\n     *   ignored by JWT implementations; any processing of this parameter is\n     *   performed by the JWT application.  If present, it is RECOMMENDED that\n     *   its value be \"JWT\" to indicate that this object is a JWT.  While\n     *   media type names are not case sensitive, it is RECOMMENDED that \"JWT\"\n     *   always be spelled using uppercase characters for compatibility with\n     *   legacy implementations.  Use of this Header Parameter is OPTIONAL.\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.9\n     *\n     * 4.1.9.  \"typ\" (Type) Header Parameter\n     *\n     *   The \"typ\" (type) Header Parameter is used by JWS applications to\n     *   declare the media type [IANA.MediaTypes] of this complete JWS.  This\n     *   is intended for use by the application when more than one kind of\n     *   object could be present in an application data structure that can\n     *   contain a JWS; the application can use this value to disambiguate\n     *   among the different kinds of objects that might be present.  It will\n     *   typically not be used by applications when the kind of object is\n     *   already known.  This parameter is ignored by JWS implementations; any\n     *   processing of this parameter is performed by the JWS application.\n     *   Use of this Header Parameter is OPTIONAL.\n     *\n     *   Per RFC 2045 [RFC2045], all media type values, subtype values, and\n     *   parameter names are case insensitive.  However, parameter values are\n     *   case sensitive unless otherwise specified for the specific parameter.\n     *\n     *   To keep messages compact in common situations, it is RECOMMENDED that\n     *   producers omit an \"application/\" prefix of a media type value in a\n     *   \"typ\" Header Parameter when no other '/' appears in the media type\n     *   value.  A recipient using the media type value MUST treat it as if\n     *   \"application/\" were prepended to any \"typ\" value not containing a\n     *   '/'.  For instance, a \"typ\" value of \"example\" SHOULD be used to\n     *   represent the \"application/example\" media type, whereas the media\n     *   type \"application/example;part=\"1/2\"\" cannot be shortened to\n     *   \"example;part=\"1/2\"\".\n     *\n     *   The \"typ\" value \"JOSE\" can be used by applications to indicate that\n     *   this object is a JWS or JWE using the JWS Compact Serialization or\n     *   the JWE Compact Serialization.  The \"typ\" value \"JOSE+JSON\" can be\n     *   used by applications to indicate that this object is a JWS or JWE\n     *   using the JWS JSON Serialization or the JWE JSON Serialization.\n     *   Other type values can also be used by applications.\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.11\n     *\n     * 4.1.11.  \"typ\" (Type) Header Parameter\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"typ\" Header Parameter defined in Section 4.1.9 of [JWS], except\n     *   that the type is that of this complete JWE.\n     */\n    typ: {\n      type: 'string'\n    },\n\n    /**\n     * cty\n     *\n     * JSON Web Token (JWT)\n     * https://tools.ietf.org/html/rfc7519#section-5.2\n     *\n     * 5.2.  \"cty\" (Content Type) Header Parameter\n     *\n     *   The \"cty\" (content type) Header Parameter defined by [JWS] and [JWE]\n     *   is used by this specification to convey structural information about\n     *   the JWT.\n     *\n     *   In the normal case in which nested signing or encryption operations\n     *   are not employed, the use of this Header Parameter is NOT\n     *   RECOMMENDED.  In the case that nested signing or encryption is\n     *   employed, this Header Parameter MUST be present; in this case, the\n     *   value MUST be \"JWT\", to indicate that a Nested JWT is carried in this\n     *   JWT.  While media type names are not case sensitive, it is\n     *   RECOMMENDED that \"JWT\" always be spelled using uppercase characters\n     *   for compatibility with legacy implementations.  See Appendix A.2 for\n     *   an example of a Nested JWT.\n     *\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.10\n     *\n     * 4.1.10.  \"cty\" (Content Type) Header Parameter\n     *\n     *   The \"cty\" (content type) Header Parameter is used by JWS applications\n     *   to declare the media type [IANA.MediaTypes] of the secured content\n     *   (the payload).  This is intended for use by the application when more\n     *   than one kind of object could be present in the JWS Payload; the\n     *   application can use this value to disambiguate among the different\n     *   kinds of objects that might be present.  It will typically not be\n     *   used by applications when the kind of object is already known.  This\n     *   parameter is ignored by JWS implementations; any processing of this\n     *   parameter is performed by the JWS application.  Use of this Header\n     *   Parameter is OPTIONAL.\n     *\n     *   Per RFC 2045 [RFC2045], all media type values, subtype values, and\n     *   parameter names are case insensitive.  However, parameter values are\n     *   case sensitive unless otherwise specified for the specific parameter.\n     *\n     *   To keep messages compact in common situations, it is RECOMMENDED that\n     *   producers omit an \"application/\" prefix of a media type value in a\n     *   \"cty\" Header Parameter when no other '/' appears in the media type\n     *   value.  A recipient using the media type value MUST treat it as if\n     *   \"application/\" were prepended to any \"cty\" value not containing a\n     *   '/'.  For instance, a \"cty\" value of \"example\" SHOULD be used to\n     *   represent the \"application/example\" media type, whereas the media\n     *   type \"application/example;part=\"1/2\"\" cannot be shortened to\n     *   \"example;part=\"1/2\"\".\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.12\n     *\n     * 4.1.12.  \"cty\" (Content Type) Header Parameter\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"cty\" Header Parameter defined in Section 4.1.10 of [JWS], except\n     *   that the type is that of the secured content (the plaintext).\n     */\n    cty: {\n      type: 'string',\n      enum: ['JWT']\n    },\n\n    /**\n     * alg\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.1\n     *\n     * 4.1.1.  \"alg\" (Algorithm) Header Parameter\n     *\n     *   The \"alg\" (algorithm) Header Parameter identifies the cryptographic\n     *   algorithm used to secure the JWS.  The JWS Signature value is not\n     *   valid if the \"alg\" value does not represent a supported algorithm or\n     *   if there is not a key for use with that algorithm associated with the\n     *   party that digitally signed or MACed the content.  \"alg\" values\n     *   should either be registered in the IANA \"JSON Web Signature and\n     *   Encryption Algorithms\" registry established by [JWA] or be a value\n     *   that contains a Collision-Resistant Name.  The \"alg\" value is a case-\n     *   sensitive ASCII string containing a StringOrURI value.  This Header\n     *   Parameter MUST be present and MUST be understood and processed by\n     *   implementations.\n     *\n     *   A list of defined \"alg\" values for this use can be found in the IANA\n     *   \"JSON Web Signature and Encryption Algorithms\" registry established\n     *   by [JWA]; the initial contents of this registry are the values\n     *   defined in Section 3.1 of [JWA].\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.1\n     *\n     * 4.1.1.  \"alg\" (Algorithm) Header Parameter\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"alg\" Header Parameter defined in Section 4.1.1 of [JWS], except\n     *   that the Header Parameter identifies the cryptographic algorithm used\n     *   to encrypt or determine the value of the CEK.  The encrypted content\n     *   is not usable if the \"alg\" value does not represent a supported\n     *   algorithm, or if the recipient does not have a key that can be used\n     *   with that algorithm.\n     *\n     *   A list of defined \"alg\" values for this use can be found in the IANA\n     *   \"JSON Web Signature and Encryption Algorithms\" registry established\n     *   by [JWA]; the initial contents of this registry are the values\n     *   defined in Section 4.1 of [JWA].\n     */\n    alg: {\n      type: 'string',\n      format: 'StringOrURI'\n    },\n\n    /**\n     * jku\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.2\n     *\n     * 4.1.2.  \"jku\" (JWK Set URL) Header Parameter (JWS)\n     *\n     *   The \"jku\" (JWK Set URL) Header Parameter is a URI [RFC3986] that\n     *   refers to a resource for a set of JSON-encoded public keys, one of\n     *   which corresponds to the key used to digitally sign the JWS.  The\n     *   keys MUST be encoded as a JWK Set [JWK].  The protocol used to\n     *   acquire the resource MUST provide integrity protection; an HTTP GET\n     *   request to retrieve the JWK Set MUST use Transport Layer Security\n     *   (TLS) [RFC2818] [RFC5246]; and the identity of the server MUST be\n     *   validated, as per Section 6 of RFC 6125 [RFC6125].  Also, see\n     *   Section 8 on TLS requirements.  Use of this Header Parameter is\n     *   OPTIONAL.\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.4\n     *\n     * 4.1.4.  \"jku\" (JWK Set URL) Header Parameter (JWE)\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"jku\" Header Parameter defined in Section 4.1.2 of [JWS], except\n     *   that the JWK Set resource contains the public key to which the JWE\n     *   was encrypted; this can be used to determine the private key needed\n     *   to decrypt the JWE.\n     */\n    jku: {\n      type: 'string',\n      format: 'URI'\n    },\n\n    /**\n     * jwk\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.3\n     *\n     * 4.1.3.  \"jwk\" (JSON Web Key) Header Parameter\n     *\n     *   The \"jwk\" (JSON Web Key) Header Parameter is the public key that\n     *   corresponds to the key used to digitally sign the JWS.  This key is\n     *   represented as a JSON Web Key [JWK].  Use of this Header Parameter is\n     *   OPTIONAL.\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.5\n     *\n     * 4.1.5.  \"jwk\" (JSON Web Key) Header Parameter\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"jwk\" Header Parameter defined in Section 4.1.3 of [JWS], except\n     *   that the key is the public key to which the JWE was encrypted; this\n     *   can be used to determine the private key needed to decrypt the JWE.\n     */\n    //jwk: JWKSchema,\n\n    /**\n     * kid\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.4\n     *\n     * 4.1.4.  \"kid\" (Key ID) Header Parameter\n     *\n     *   The \"kid\" (key ID) Header Parameter is a hint indicating which key\n     *   was used to secure the JWS.  This parameter allows originators to\n     *   explicitly signal a change of key to recipients.  The structure of\n     *   the \"kid\" value is unspecified.  Its value MUST be a case-sensitive\n     *   string.  Use of this Header Parameter is OPTIONAL.\n     *\n     *   When used with a JWK, the \"kid\" value is used to match a JWK \"kid\"\n     *   parameter value.\n     *\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.6\n     *\n     * 4.1.6.  \"kid\" (Key ID) Header Parameter\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"kid\" Header Parameter defined in Section 4.1.4 of [JWS], except\n     *   that the key hint references the public key to which the JWE was\n     *   encrypted; this can be used to determine the private key needed to\n     *   decrypt the JWE.  This parameter allows originators to explicitly\n     *   signal a change of key to JWE recipients.\n     */\n    kid: {\n      type: 'string'\n    },\n\n    /**\n     * x5u\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.5\n     *\n     * 4.1.5.  \"x5u\" (X.509 URL) Header Parameter\n     *\n     *   The \"x5u\" (X.509 URL) Header Parameter is a URI [RFC3986] that refers\n     *   to a resource for the X.509 public key certificate or certificate\n     *   chain [RFC5280] corresponding to the key used to digitally sign the\n     *   JWS.  The identified resource MUST provide a representation of the\n     *   certificate or certificate chain that conforms to RFC 5280 [RFC5280]\n     *   in PEM-encoded form, with each certificate delimited as specified in\n     *   Section 6.1 of RFC 4945 [RFC4945].  The certificate containing the\n     *   public key corresponding to the key used to digitally sign the JWS\n     *   MUST be the first certificate.  This MAY be followed by additional\n     *   certificates, with each subsequent certificate being the one used to\n     *   certify the previous one.  The protocol used to acquire the resource\n     *   MUST provide integrity protection; an HTTP GET request to retrieve\n     *   the certificate MUST use TLS [RFC2818] [RFC5246]; and the identity of\n     *   the server MUST be validated, as per Section 6 of RFC 6125 [RFC6125].\n     *   Also, see Section 8 on TLS requirements.  Use of this Header\n     *   Parameter is OPTIONAL.\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.7\n     *\n     * 4.1.7.  \"x5u\" (X.509 URL) Header Parameter\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"x5u\" Header Parameter defined in Section 4.1.5 of [JWS], except\n     *   that the X.509 public key certificate or certificate chain [RFC5280]\n     *   contains the public key to which the JWE was encrypted; this can be\n     *   used to determine the private key needed to decrypt the JWE.\n     */\n    x5u: {\n      type: 'string',\n      format: 'URI'\n    },\n\n    /**\n     * x5c\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.6\n     *\n     * 4.1.6.  \"x5c\" (X.509 Certificate Chain) Header Parameter\n     *\n     *   The \"x5c\" (X.509 certificate chain) Header Parameter contains the\n     *   X.509 public key certificate or certificate chain [RFC5280]\n     *   corresponding to the key used to digitally sign the JWS.  The\n     *   certificate or certificate chain is represented as a JSON array of\n     *   certificate value strings.  Each string in the array is a\n     *   base64-encoded (Section 4 of [RFC4648] -- not base64url-encoded) DER\n     *   [ITU.X690.2008] PKIX certificate value.  The certificate containing\n     *   the public key corresponding to the key used to digitally sign the\n     *   JWS MUST be the first certificate.  This MAY be followed by\n     *   additional certificates, with each subsequent certificate being the\n     *   one used to certify the previous one.  The recipient MUST validate\n     *   the certificate chain according to RFC 5280 [RFC5280] and consider\n     *   the certificate or certificate chain to be invalid if any validation\n     *   failure occurs.  Use of this Header Parameter is OPTIONAL.\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.8\n     *\n     * 4.1.8.  \"x5c\" (X.509 Certificate Chain) Header Parameter\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"x5c\" Header Parameter defined in Section 4.1.6 of [JWS], except\n     *   that the X.509 public key certificate or certificate chain [RFC5280]\n     *   contains the public key to which the JWE was encrypted; this can be\n     *   used to determine the private key needed to decrypt the JWE.\n     */\n    x5c: {\n      type: 'array',\n      items: {\n        type: 'string',\n        format: 'base64'\n      }\n    },\n\n    /**\n     * x5t\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.7\n     *\n     * 4.1.7.  \"x5t\" (X.509 Certificate SHA-1 Thumbprint) Header Parameter\n     *\n     *   The \"x5t\" (X.509 certificate SHA-1 thumbprint) Header Parameter is a\n     *   base64url-encoded SHA-1 thumbprint (a.k.a. digest) of the DER\n     *   encoding of the X.509 certificate [RFC5280] corresponding to the key\n     *   used to digitally sign the JWS.  Note that certificate thumbprints\n     *   are also sometimes known as certificate fingerprints.  Use of this\n     *   Header Parameter is OPTIONAL.\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.9\n     *\n     * 4.1.9.  \"x5t\" (X.509 Certificate SHA-1 Thumbprint) Header Parameter\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"x5t\" Header Parameter defined in Section 4.1.7 of [JWS], except\n     *   that the certificate referenced by the thumbprint contains the public\n     *   key to which the JWE was encrypted; this can be used to determine the\n     *   private key needed to decrypt the JWE.  Note that certificate\n     *   thumbprints are also sometimes known as certificate fingerprints.\n     */\n    x5t: {\n      type: 'string',\n      format: 'base64url'\n    },\n\n    /**\n     * x5t#S256\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.8\n     *\n     * 4.1.8.  \"x5t#S256\" (X.509 Certificate SHA-256 Thumbprint) Header\n     *         Parameter\n     *\n     *   The \"x5t#S256\" (X.509 certificate SHA-256 thumbprint) Header\n     *   Parameter is a base64url-encoded SHA-256 thumbprint (a.k.a. digest)\n     *   of the DER encoding of the X.509 certificate [RFC5280] corresponding\n     *   to the key used to digitally sign the JWS.  Note that certificate\n     *   thumbprints are also sometimes known as certificate fingerprints.\n     *   Use of this Header Parameter is OPTIONAL.\n     *\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.10\n     *\n     * 4.1.10.  \"x5t#S256\" (X.509 Certificate SHA-256 Thumbprint) Header\n     *          Parameter\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"x5t#S256\" Header Parameter defined in Section 4.1.8 of [JWS],\n     *   except that the certificate referenced by the thumbprint contains the\n     *   public key to which the JWE was encrypted; this can be used to\n     *   determine the private key needed to decrypt the JWE.  Note that\n     *   certificate thumbprints are also sometimes known as certificate\n     *   fingerprints.\n     */\n    //'x5t#S256': {\n    //  type: 'string',\n    //  format: 'base64url'\n    //},\n\n    /**\n     * crit\n     *\n     * JSON Web Signature (JWS)\n     * https://tools.ietf.org/html/rfc7515#section-4.1.11\n     *\n     * 4.1.11.  \"crit\" (Critical) Header Parameter\n     *\n     *   The \"crit\" (critical) Header Parameter indicates that extensions to\n     *   this specification and/or [JWA] are being used that MUST be\n     *   understood and processed.  Its value is an array listing the Header\n     *   Parameter names present in the JOSE Header that use those extensions.\n     *   If any of the listed extension Header Parameters are not understood\n     *   and supported by the recipient, then the JWS is invalid.  Producers\n     *   MUST NOT include Header Parameter names defined by this specification\n     *   or [JWA] for use with JWS, duplicate names, or names that do not\n     *   occur as Header Parameter names within the JOSE Header in the \"crit\"\n     *   list.  Producers MUST NOT use the empty list \"[]\" as the \"crit\"\n     *   value.  Recipients MAY consider the JWS to be invalid if the critical\n     *   list contains any Header Parameter names defined by this\n     *   specification or [JWA] for use with JWS or if any other constraints\n     *   on its use are violated.  When used, this Header Parameter MUST be\n     *   integrity protected; therefore, it MUST occur only within the JWS\n     *   Protected Header.  Use of this Header Parameter is OPTIONAL.  This\n     *   Header Parameter MUST be understood and processed by implementations.\n     *\n     *   An example use, along with a hypothetical \"exp\" (expiration time)\n     *   field is:\n     *\n     *     {\"alg\":\"ES256\",\n     *     \"crit\":[\"exp\"],\n     *     \"exp\":1363284000\n     *     }\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.13\n     *\n     *   4.1.13.  \"crit\" (Critical) Header Parameter\n     *\n     *   This parameter has the same meaning, syntax, and processing rules as\n     *   the \"crit\" Header Parameter defined in Section 4.1.11 of [JWS],\n     *   except that Header Parameters for a JWE are being referred to, rather\n     *   than Header Parameters for a JWS.\n     */\n    crit: {\n      type: 'array',\n      items: {\n        type: 'string'\n      },\n      minItems: 1\n    },\n\n    /**\n     * enc\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.2\n     *\n     * 4.1.2.  \"enc\" (Encryption Algorithm) Header Parameter\n     *\n     *   The \"enc\" (encryption algorithm) Header Parameter identifies the\n     *   content encryption algorithm used to perform authenticated encryption\n     *   on the plaintext to produce the ciphertext and the Authentication\n     *   Tag.  This algorithm MUST be an AEAD algorithm with a specified key\n     *   length.  The encrypted content is not usable if the \"enc\" value does\n     *   not represent a supported algorithm.  \"enc\" values should either be\n     *   registered in the IANA \"JSON Web Signature and Encryption Algorithms\"\n     *   registry established by [JWA] or be a value that contains a\n     *   Collision-Resistant Name.  The \"enc\" value is a case-sensitive ASCII\n     *   string containing a StringOrURI value.  This Header Parameter MUST be\n     *   present and MUST be understood and processed by implementations.\n     *\n     *   A list of defined \"enc\" values for this use can be found in the IANA\n     *   \"JSON Web Signature and Encryption Algorithms\" registry established\n     *   by [JWA]; the initial contents of this registry are the values\n     *   defined in Section 5.1 of [JWA].\n     */\n    enc: {\n      type: 'string',\n      format: 'StringOrURI'\n    },\n\n    /**\n     * zip\n     *\n     * JSON Web Encryption (JWE)\n     * https://tools.ietf.org/html/rfc7516#section-4.1.3\n     *\n     * 4.1.3.  \"zip\" (Compression Algorithm) Header Parameter\n     *\n     *   The \"zip\" (compression algorithm) applied to the plaintext before\n     *   encryption, if any.  The \"zip\" value defined by this specification\n     *   is:\n     *\n     *   o  \"DEF\" - Compression with the DEFLATE [RFC1951] algorithm\n     *\n     *   Other values MAY be used.  Compression algorithm values can be\n     *   registered in the IANA \"JSON Web Encryption Compression Algorithms\"\n     *   registry established by [JWA].  The \"zip\" value is a case-sensitive\n     *   string.  If no \"zip\" parameter is present, no compression is applied\n     *   to the plaintext before encryption.  When used, this Header Parameter\n     *   MUST be integrity protected; therefore, it MUST occur only within the\n     *   JWE Protected Header.  Use of this Header Parameter is OPTIONAL.\n     *   This Header Parameter MUST be understood and processed by\n     *   implementations.\n     */\n    zip: {\n      type: 'string'\n    }\n  }\n});\n\n/**\n * Export\n */\nmodule.exports = JOSEHeaderSchema;","'use strict';\n\n/**\n * Dependencies\n */\nvar _require = require('@trust/json-document'),\n    JSONSchema = _require.JSONSchema;\n\n/**\n * JWTClaimsSetSchema\n *\n * JSON Web Token (JWT)\n * https://tools.ietf.org/html/rfc7519#section-4\n *\n * 4.  JWT Claims\n *\n *   The JWT Claims Set represents a JSON object whose members are the\n *   claims conveyed by the JWT.  The Claim Names within a JWT Claims Set\n *   MUST be unique; JWT parsers MUST either reject JWTs with duplicate\n *   Claim Names or use a JSON parser that returns only the lexically last\n *   duplicate member name, as specified in Section 15.12 (\"The JSON\n *   Object\") of ECMAScript 5.1 [ECMAScript].\n *\n *   The set of claims that a JWT must contain to be considered valid is\n *   context dependent and is outside the scope of this specification.\n *   Specific applications of JWTs will require implementations to\n *   understand and process some claims in particular ways.  However, in\n *   the absence of such requirements, all claims that are not understood\n *   by implementations MUST be ignored.\n *\n *   There are three classes of JWT Claim Names: Registered Claim Names,\n *   Public Claim Names, and Private Claim Names.\n */\n\n\nvar JWTClaimsSetSchema = new JSONSchema({\n  properties: {\n\n    /**\n     * JSON Web Token (JWT)\n     * https://tools.ietf.org/html/rfc7519#section-4.1\n     *\n     * 4.1.  Registered Claim Names\n     *\n     *   The following Claim Names are registered in the IANA \"JSON Web Token\n     *   Claims\" registry established by Section 10.1.  None of the claims\n     *   defined below are intended to be mandatory to use or implement in all\n     *   cases, but rather they provide a starting point for a set of useful,\n     *   interoperable claims.  Applications using JWTs should define which\n     *   specific claims they use and when they are required or optional.  All\n     *   the names are short because a core goal of JWTs is for the\n     *   representation to be compact.\n     */\n\n    /**\n     * iss\n     *\n     * JSON Web Token (JWT)\n     * https://tools.ietf.org/html/rfc7519#section-4.1.1\n     *\n     * 4.1.1.  \"iss\" (Issuer) Claim\n     *\n     *   The \"iss\" (issuer) claim identifies the principal that issued the\n     *   JWT.  The processing of this claim is generally application specific.\n     *   The \"iss\" value is a case-sensitive string containing a StringOrURI\n     *   value.  Use of this claim is OPTIONAL.\n     */\n    iss: {\n      type: 'string',\n      format: 'StringOrURI'\n    },\n\n    /**\n     * sub\n     *\n     * JSON Web Token (JWT)\n     * https://tools.ietf.org/html/rfc7519#section-4.1.2\n     *\n     * 4.1.2.  \"sub\" (Subject) Claim\n     *\n     *   The \"sub\" (subject) claim identifies the principal that is the\n     *   subject of the JWT.  The claims in a JWT are normally statements\n     *   about the subject.  The subject value MUST either be scoped to be\n     *   locally unique in the context of the issuer or be globally unique.\n     *   The processing of this claim is generally application specific.  The\n     *   \"sub\" value is a case-sensitive string containing a StringOrURI\n     *   value.  Use of this claim is OPTIONAL.\n     */\n    sub: {\n      type: 'string',\n      format: 'StringOrURI'\n    },\n\n    /**\n     * aud\n     *\n     * JSON Web Token (JWT)\n     * https://tools.ietf.org/html/rfc7519#section-4.1.3\n     *\n     * 4.1.3.  \"aud\" (Audience) Claim\n     *\n     *   The \"aud\" (audience) claim identifies the recipients that the JWT is\n     *   intended for.  Each principal intended to process the JWT MUST\n     *   identify itself with a value in the audience claim.  If the principal\n     *   processing the claim does not identify itself with a value in the\n     *   \"aud\" claim when this claim is present, then the JWT MUST be\n     *   rejected.  In the general case, the \"aud\" value is an array of case-\n     *   sensitive strings, each containing a StringOrURI value.  In the\n     *   special case when the JWT has one audience, the \"aud\" value MAY be a\n     *   single case-sensitive string containing a StringOrURI value.  The\n     *   interpretation of audience values is generally application specific.\n     *   Use of this claim is OPTIONAL.\n     */\n    aud: {\n      type: ['array', 'string'],\n      format: 'StringOrURI',\n      items: {\n        format: 'StringOrURI'\n      }\n    },\n\n    /**\n     * exp\n     *\n     * JSON Web Token (JWT)\n     * https://tools.ietf.org/html/rfc7519#section-4.1.4\n     *\n     * 4.1.4.  \"exp\" (Expiration Time) Claim\n     *\n     *   The \"exp\" (expiration time) claim identifies the expiration time on\n     *   or after which the JWT MUST NOT be accepted for processing.  The\n     *   processing of the \"exp\" claim requires that the current date/time\n     *   MUST be before the expiration date/time listed in the \"exp\" claim.\n     *\n     *   Implementers MAY provide for some small leeway, usually no more than\n     *   a few minutes, to account for clock skew.  Its value MUST be a number\n     *   containing a NumericDate value.  Use of this claim is OPTIONAL.\n     *\n     */\n    exp: {\n      type: 'number',\n      format: 'NumericDate'\n    },\n\n    /**\n     * nbf\n     *\n     * JSON Web Token (JWT)\n     * https://tools.ietf.org/html/rfc7519#section-4.1.5\n     *\n     * 4.1.5.  \"nbf\" (Not Before) Claim\n     *\n     *   The \"nbf\" (not before) claim identifies the time before which the JWT\n     *   MUST NOT be accepted for processing.  The processing of the \"nbf\"\n     *   claim requires that the current date/time MUST be after or equal to\n     *   the not-before date/time listed in the \"nbf\" claim.  Implementers MAY\n     *   provide for some small leeway, usually no more than a few minutes, to\n     *   account for clock skew.  Its value MUST be a number containing a\n     *   NumericDate value.  Use of this claim is OPTIONAL.\n     */\n    nbf: {\n      type: 'number',\n      format: 'NumericDate'\n    },\n\n    /**\n     * iat\n     *\n     * JSON Web Token (JWT)\n     * https://tools.ietf.org/html/rfc7519#section-4.1.6\n     *\n     * 4.1.6.  \"iat\" (Issued At) Claim\n     *\n     *   The \"iat\" (issued at) claim identifies the time at which the JWT was\n     *   issued.  This claim can be used to determine the age of the JWT.  Its\n     *   value MUST be a number containing a NumericDate value.  Use of this\n     *   claim is OPTIONAL.\n     */\n    iat: {\n      type: 'number',\n      format: 'NumericDate'\n    },\n\n    /**\n     * jti\n     *\n     * JSON Web Token (JWT)\n     * https://tools.ietf.org/html/rfc7519#section-4.1.7\n     *\n     * 4.1.7.  \"jti\" (JWT ID) Claim\n     *\n     *   The \"jti\" (JWT ID) claim provides a unique identifier for the JWT.\n     *   The identifier value MUST be assigned in a manner that ensures that\n     *   there is a negligible probability that the same value will be\n     *   accidentally assigned to a different data object; if the application\n     *   uses multiple issuers, collisions MUST be prevented among values\n     *   produced by different issuers as well.  The \"jti\" claim can be used\n     *   to prevent the JWT from being replayed.  The \"jti\" value is a case-\n     *   sensitive string.  Use of this claim is OPTIONAL.\n     */\n    jti: {\n      type: 'string'\n    }\n  }\n});\n\n/**\n * Export\n */\nmodule.exports = JWTClaimsSetSchema;","'use strict';\n\n/**\n * Dependencies\n */\nvar _require = require('@trust/json-document'),\n    JSONSchema = _require.JSONSchema;\n\n/**\n * Base64URLSchema\n */\n\n\nvar Base64URLSchema = new JSONSchema({\n  type: 'string',\n  format: 'base64url'\n});\n\n/**\n * Export\n */\nmodule.exports = Base64URLSchema;","'use strict';\n\n/**\n * Dependencies\n */\nvar Base64URLSchema = require('./Base64URLSchema');\nvar JWTClaimsSetSchema = require('./JWTClaimsSetSchema');\nvar JOSEHeaderSchema = require('./JOSEHeaderSchema');\n\nvar _require = require('@trust/json-document'),\n    JSONSchema = _require.JSONSchema;\n\n/**\n * JWTSchema\n *\n * @description\n * This schema represents all the things a deserialized JWT can be, i.e.,\n * either a JWS or JWE, and any serialization of them. Validation of well-\n * formedness for a given serialization is accomplished at the time of\n * encoding.\n */\n\n\nvar JWTSchema = new JSONSchema({\n  type: 'object',\n  properties: {\n\n    /**\n     * type\n     */\n    type: {\n      type: 'string',\n      enum: ['JWS', 'JWE']\n    },\n\n    /**\n     * segments\n     */\n    segments: {\n      type: 'array'\n    },\n\n    /**\n     * header\n     */\n    header: JOSEHeaderSchema,\n\n    /**\n     * protected\n     */\n    protected: JOSEHeaderSchema,\n\n    /**\n     * unprotected\n     */\n    unprotected: JOSEHeaderSchema,\n\n    /**\n     * iv\n     */\n    iv: Base64URLSchema,\n\n    /**\n     * aad\n     */\n    aad: Base64URLSchema,\n\n    /**\n     * ciphertext\n     */\n    ciphertext: Base64URLSchema,\n\n    /**\n     * tag\n     */\n    tag: Base64URLSchema,\n\n    /**\n     * recipients\n     */\n    recipients: {\n      type: 'array',\n      items: {\n        type: 'object',\n        properties: {\n          header: JOSEHeaderSchema,\n          encrypted_key: Base64URLSchema\n        }\n      }\n    },\n\n    /**\n     * payload\n     */\n    payload: JWTClaimsSetSchema,\n\n    /**\n     * signatures\n     */\n    signatures: {\n      type: 'array',\n      items: {\n        type: 'object',\n        properties: {\n          protected: JOSEHeaderSchema,\n          header: JOSEHeaderSchema,\n          signature: Base64URLSchema,\n          key: { type: 'object' }\n        }\n      }\n    },\n\n    /**\n     * signature\n     */\n    signature: Base64URLSchema,\n\n    /**\n     * verified\n     */\n    verified: {\n      type: 'boolean',\n      default: false\n    },\n\n    /**\n     * key\n     */\n    key: {\n      type: 'object'\n    },\n\n    /**\n     * serialization\n     */\n    serialization: {\n      type: 'string',\n      enum: ['compact', 'json', 'flattened'],\n      default: 'compact'\n    }\n  }\n});\n\n/**\n * Export\n */\nmodule.exports = JWTSchema;","'use strict';\n\n/**\n * Dependencies\n */\n\nvar _require = require('@trust/json-document'),\n    JSONSchema = _require.JSONSchema;\n\nvar JWKSchema = require('./JWKSchema');\n\n/**\n * JWKSetSchema\n */\nvar JWKSetSchema = new JSONSchema({\n  type: 'object',\n  properties: {\n    keys: {\n      type: 'array',\n      items: JWKSchema\n    }\n  }\n});\n\n/**\n * Export\n */\nmodule.exports = JWKSetSchema;","'use strict';\n\n/**\n * Module dependencies\n * @ignore\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar formats = require('./Formats');\n\n/**\n * For variable iterator counter\n *\n * @type {number}\n */\nvar indexCount = 0;\n\n/**\n * Validator\n *\n * Compile an object describing a JSON Schema into a validation function.\n */\n\nvar Validator = function () {\n  _createClass(Validator, null, [{\n    key: 'compile',\n\n\n    /**\n     * Compile (static)\n     *\n     * @description\n     * Compile an object describing a JSON Schema into a validation function.\n     *\n     * @param {Object} schema\n     * @returns {Function}\n     */\n    value: function compile(schema) {\n      var validator = new Validator(schema);\n\n      var body = '\\n      // \"cursor\"\\n      let value = data\\n      let container\\n      let stack = []\\n      let top = -1\\n\\n      // error state\\n      let valid = true\\n      let errors = []\\n\\n      // complex schema state\\n      let initialValidity\\n      let anyValid\\n      let notValid\\n      let countOfValid\\n      let initialErrorCount\\n      let accumulatedErrorCount\\n\\n      // validation code\\n      ' + validator.compile() + '\\n\\n      // validation result\\n      return {\\n        valid,\\n        errors\\n      }\\n    ';\n\n      return new Function('data', body);\n    }\n\n    /**\n     * Return current iterator index counter and increase value\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: 'counter',\n    get: function get() {\n      return indexCount++;\n    }\n\n    /**\n     * Constructor\n     *\n     * @param {Object} schema - object representation of a schema\n     * @param {string} options - compilation options\n     */\n\n  }]);\n\n  function Validator(schema) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Validator);\n\n    // assign schema to this\n    this.schema = schema;\n\n    // assign all options to this\n    Object.assign(this, options);\n\n    // ensure address is defined\n    if (!this.address) {\n      this.address = '';\n    }\n\n    // ensure require is boolean\n    if (this.require !== true) {\n      this.require = false;\n    }\n  }\n\n  /**\n   * Compile\n   *\n   * @description\n   * The instance compile method is \"dumb\". It only sequences invocation of\n   * more specific compilation methods. It generates code to\n   *\n   *  - read a value from input\n   *  - validate type(s) of input\n   *  - validate constraints described by various schema keywords\n   *\n   * Conditional logic related to code generation is pushed downsteam to\n   * type-specific methods.\n   */\n\n\n  _createClass(Validator, [{\n    key: 'compile',\n    value: function compile() {\n      var block = '';\n\n      if (this.require) {\n        block += this.required();\n      }\n\n      // type validation\n      block += this.type();\n\n      // type specific validation generators\n      // null and boolean are covered by this.type()\n      // integer should be covered by number and this.type()\n      block += this.array();\n      block += this.number();\n      block += this.object();\n      block += this.string();\n\n      // non-type-specific validation generators\n      block += this.enum();\n      block += this.anyOf();\n      block += this.allOf();\n      block += this.not();\n      block += this.oneOf();\n\n      return block;\n    }\n\n    /**\n     * push\n     */\n\n  }, {\n    key: 'push',\n    value: function push() {\n      return '\\n      stack.push(value)\\n      container = value\\n      top++\\n    ';\n    }\n\n    /**\n     * pop\n     */\n\n  }, {\n    key: 'pop',\n    value: function pop() {\n      return '\\n      if (stack.length > 1) {\\n        top--\\n        stack.pop()\\n      }\\n\\n      value = container = stack[top]\\n    ';\n    }\n\n    /**\n     * type\n     *\n     * @description\n     * > An instance matches successfully if its primitive type is one of the\n     * > types defined by keyword. Recall: \"number\" includes \"integer\".\n     * > JSON Schema Validation Section 5.5.2\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'type',\n    value: function type() {\n      var type = this.schema.type,\n          address = this.address;\n\n      var block = '';\n\n      if (type) {\n        var types = Array.isArray(type) ? type : [type];\n        var conditions = types.map(function (type) {\n          // TODO: can we make a mapping object for this to clean it up?\n          if (type === 'array') return '!Array.isArray(value)';\n          if (type === 'boolean') return 'typeof value !== \\'boolean\\'';\n          if (type === 'integer') return '!Number.isInteger(value)';\n          if (type === 'null') return 'value !== null';\n          if (type === 'number') return 'typeof value !== \\'number\\'';\n          if (type === 'object') return '(typeof value !== \\'object\\' || Array.isArray(value) || value === null)';\n          if (type === 'string') return 'typeof value !== \\'string\\'';\n        }).join(' && ');\n\n        block += '\\n      // ' + address + ' type checking\\n      if (value !== undefined && ' + conditions + ') {\\n        valid = false\\n        errors.push({\\n          keyword: \\'type\\',\\n          message: \\'invalid type\\'\\n        })\\n      }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * Type-specific validations\n     *\n     * Type checking is optional in JSON Schema, and a schema can allow\n     * multiple types. Generated code needs to apply type-specific validations\n     * only to appropriate values, and ignore everything else. Type validation\n     * itself is handled separately from other validation keywords.\n     *\n     * The methods `array`, `number`, `object`, `string` generate type-specific\n     * validation code blocks, wrapped in a conditional such that they will\n     * only be applied to values of that type.\n     *\n     * For example, the `number` method, given the schema\n     *\n     *     { minimum: 3 }\n     *\n     * will generate\n     *\n     *     if (typeof value === 'number') {\n     *       if (value < 3) {\n     *         valid = false\n     *         errors.push({ message: '...' })\n     *       }\n     *     }\n     *\n     * Integer values are also numbers, and are validated the same as numbers\n     * other than the type validation itself. Therefore no `integer` method is\n     * needed.\n     */\n\n    /**\n     * array\n     *\n     * @description\n     * Invoke methods for array-specific keywords and wrap resulting code in\n     * type-checking conditional so that any resulting validations are only\n     * applied to array values.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'array',\n    value: function array() {\n      var keywords = ['additionalItems', 'items', 'minItems', 'maxItems', 'uniqueItems'];\n      var validations = this.validations(keywords);\n      var block = '';\n\n      if (validations.length > 0) {\n        block += '\\n      /**\\n       * Array validations\\n       */\\n      if (Array.isArray(value)) {\\n      ' + validations + '\\n      }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * number\n     *\n     * @description\n     * Invoke methods for number-specific keywords and wrap resulting code in\n     * type-checking conditional so that any resulting validations are only\n     * applied to number values.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'number',\n    value: function number() {\n      var keywords = ['minimum', 'maximum', 'multipleOf'];\n      var validations = this.validations(keywords);\n      var block = '';\n\n      if (validations.length > 0) {\n        block += '\\n      /**\\n       * Number validations\\n       */\\n      if (typeof value === \\'number\\') {\\n      ' + validations + '\\n      }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * object\n     *\n     * @description\n     * Invoke methods for object-specific keywords and wrap resulting code in\n     * type-checking conditional so that any resulting validations are only\n     * applied to object values.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'object',\n    value: function object() {\n      var keywords = ['maxProperties', 'minProperties', 'additionalProperties', 'properties', 'patternProperties', 'dependencies', 'schemaDependencies', 'propertyDependencies'];\n      var validations = this.validations(keywords);\n      var block = '';\n\n      if (validations.length > 0) {\n        block += '\\n      /**\\n       * Object validations\\n       */\\n      if (typeof value === \\'object\\' && value !== null && !Array.isArray(value)) {\\n      ' + validations + '\\n      }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * string\n     *\n     * @description\n     * Invoke methods for string-specific keywords and wrap resulting code in\n     * type-checking conditional so that any resulting validations are only\n     * applied to string values.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'string',\n    value: function string() {\n      var keywords = ['maxLength', 'minLength', 'pattern', 'format'];\n      var validations = this.validations(keywords);\n      var block = '';\n\n      if (validations.length > 0) {\n        block += '\\n      /**\\n       * String validations\\n       */\\n      if (typeof value === \\'string\\') {\\n      ' + validations + '\\n      }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * validations\n     *\n     * @description\n     * Iterate over an array of keywords and invoke code generator methods\n     * for each. Concatenate the results together and return. Used by \"type\"\n     * methods such as this.array() and this.string()\n     *\n     * @param {Array} keywords\n     * @returns {string}\n     */\n\n  }, {\n    key: 'validations',\n    value: function validations(keywords) {\n      var _this = this;\n\n      var schema = this.schema;\n\n      var block = '';\n\n      var constraints = Object.keys(schema).filter(function (key) {\n        return keywords.indexOf(key) !== -1;\n      });\n\n      constraints.forEach(function (keyword) {\n        block += _this[keyword]();\n      });\n\n      return block;\n    }\n\n    /**\n     * enum\n     *\n     * @description\n     * > An instance validates successfully against this keyword if its value\n     * > is equal to one of the elements in this keyword's array value.\n     * > JSON Schema Validation Section 5.5.1\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'enum',\n    value: function _enum() {\n      var enumerated = this.schema.enum,\n          address = this.address;\n\n      var conditions = ['value !== undefined'];\n      var block = '';\n\n      if (enumerated) {\n        enumerated.forEach(function (value) {\n          switch (typeof value === 'undefined' ? 'undefined' : _typeof(value)) {\n            case 'boolean':\n              conditions.push('value !== ' + value);\n              break;\n\n            case 'number':\n              conditions.push('value !== ' + value);\n              break;\n\n            case 'string':\n              conditions.push('value !== \"' + value + '\"');\n              break;\n\n            case 'object':\n              if (value === null) {\n                conditions.push('value !== null');\n              } else {\n                conditions.push('\\'' + JSON.stringify(value) + '\\' !== JSON.stringify(value)');\n              }\n              break;\n\n            default:\n              throw new Error('Things are not well in the land of enum');\n\n          }\n        });\n\n        block += '\\n      /**\\n       * Validate \"' + address + '\" enum\\n       */\\n      if (' + conditions.join(' && ') + ') {\\n        valid = false\\n        errors.push({\\n          keyword: \\'enum\\',\\n          message: JSON.stringify(value) + \\' is not an enumerated value\\'\\n        })\\n      }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * anyOf\n     *\n     * @description\n     * > An instance validates successfully against this keyword if it\n     * > validates successfully against at least one schema defined by this\n     * > keyword's value.\n     * > JSON Schema Validation Section 5.5.4\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'anyOf',\n    value: function anyOf() {\n      var anyOf = this.schema.anyOf,\n          address = this.address;\n\n      var block = '';\n\n      if (Array.isArray(anyOf)) {\n        block += '\\n        initialValidity = valid\\n        initialErrorCount = errors.length\\n        anyValid = false\\n      ';\n\n        anyOf.forEach(function (subschema) {\n          var validator = new Validator(subschema, { address: address });\n          block += '\\n        accumulatedErrorCount = errors.length\\n        ' + validator.compile() + '\\n        if (accumulatedErrorCount === errors.length) {\\n          anyValid = true\\n        }\\n        ';\n        });\n\n        block += '\\n          if (anyValid === true) {\\n            valid = initialValidity\\n            errors = errors.slice(0, initialErrorCount)\\n          }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * allOf\n     *\n     * @description\n     * > An instance validates successfully against this keyword if it\n     * > validates successfully against all schemas defined by this keyword's\n     * > value.\n     * > JSON Schema Validation Section 5.5.3\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'allOf',\n    value: function allOf() {\n      var allOf = this.schema.allOf,\n          address = this.address;\n\n      var block = '';\n\n      if (Array.isArray(allOf)) {\n        allOf.forEach(function (subschema) {\n          var validator = new Validator(subschema, { address: address });\n          block += '\\n        ' + validator.compile() + '\\n        ';\n        });\n      }\n\n      return block;\n    }\n\n    /**\n     * oneOf\n     *\n     * @description\n     * > An instance validates successfully against this keyword if it\n     * > validates successfully against exactly one schema defined by this\n     * > keyword's value.\n     * > JSON Schema Validation Section 5.5.5\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'oneOf',\n    value: function oneOf() {\n      var oneOf = this.schema.oneOf,\n          address = this.address;\n\n      var block = '';\n\n      if (Array.isArray(oneOf)) {\n        block += '\\n        /**\\n         * Validate ' + address + ' oneOf\\n         */\\n        initialValidity = valid\\n        initialErrorCount = errors.length\\n        countOfValid = 0\\n      ';\n\n        oneOf.forEach(function (subschema) {\n          var validator = new Validator(subschema, { address: address });\n          block += '\\n        accumulatedErrorCount = errors.length\\n        ' + validator.compile() + '\\n        if (accumulatedErrorCount === errors.length) {\\n          countOfValid += 1\\n        }\\n        ';\n        });\n\n        block += '\\n          if (countOfValid === 1) {\\n            valid = initialValidity\\n            errors = errors.slice(0, initialErrorCount)\\n          } else {\\n            valid = false\\n            errors.push({\\n              keyword: \\'oneOf\\',\\n              message: \\'what is a reasonable error message for this case?\\'\\n            })\\n          }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * not\n     *\n     * @description\n     * > An instance is valid against this keyword if it fails to validate\n     * > successfully against the schema defined by this keyword.\n     * > JSON Schema Validation Section 5.5.6\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'not',\n    value: function not() {\n      var not = this.schema.not,\n          address = this.address;\n\n      var block = '';\n\n      if ((typeof not === 'undefined' ? 'undefined' : _typeof(not)) === 'object' && not !== null && !Array.isArray(not)) {\n        var subschema = not;\n        var validator = new Validator(subschema, { address: address });\n\n        block += '\\n        /**\\n         * NOT\\n         */\\n        if (value !== undefined) {\\n          initialValidity = valid\\n          initialErrorCount = errors.length\\n          notValid = true\\n\\n          accumulatedErrorCount = errors.length\\n\\n          ' + validator.compile() + '\\n\\n          if (accumulatedErrorCount === errors.length) {\\n            notValid = false\\n          }\\n\\n          if (notValid === true) {\\n            valid = initialValidity\\n            errors = errors.slice(0, initialErrorCount)\\n          } else {\\n            valid = false\\n            errors = errors.slice(0, initialErrorCount)\\n            errors.push({\\n              keyword: \\'not\\',\\n              message: \\'hmm...\\'\\n            })\\n          }\\n        }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * properties\n     *\n     * @description\n     * Iterate over the `properties` schema property if it is an object. For each\n     * key, initialize a new Validator for the subschema represented by the property\n     * value and invoke compile. Append the result of compiling each subschema to\n     * the block of code being generated.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'properties',\n    value: function properties() {\n      var schema = this.schema,\n          address = this.address;\n      var properties = schema.properties,\n          required = schema.required;\n\n      var block = this.push();\n\n      // ensure the value of \"required\" schema property is an array\n      required = Array.isArray(required) ? required : [];\n\n      if ((typeof properties === 'undefined' ? 'undefined' : _typeof(properties)) === 'object') {\n        Object.keys(properties).forEach(function (key) {\n          var subschema = properties[key];\n          var isRequired = required.indexOf(key) !== -1;\n          // TODO\n          // how should we be calculating these things? should be json pointer?\n          // needs a separate function\n          var pointer = [address, key].filter(function (segment) {\n            return !!segment;\n          }).join('.');\n          var validation = new Validator(subschema, { address: pointer, require: isRequired });\n\n          // read the value\n          block += '\\n        value = container[\\'' + key + '\\']\\n        ';\n\n          block += validation.compile();\n        });\n      }\n\n      block += this.pop();\n\n      return block;\n    }\n\n    /**\n     * Other Properties\n     *\n     * @description\n     * This method is not for a keyword. It wraps validations for\n     * patternProperties and additionalProperties in a single iteration over\n     * an object-type value's properties.\n     *\n     * It should only be invoked once for a given subschema.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'otherProperties',\n    value: function otherProperties() {\n      return '\\n      /**\\n       * Validate Other Properties\\n       */\\n      ' + this.push() + '\\n\\n      for (let key in container) {\\n        value = container[key]\\n        matched = false\\n\\n        ' + this.patternValidations() + '\\n        ' + this.additionalValidations() + '\\n      }\\n\\n      ' + this.pop() + '\\n    ';\n    }\n\n    /**\n     * Pattern Validations\n     *\n     * @description\n     * Generate validation code from a subschema for properties matching a\n     * regular expression.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'patternValidations',\n    value: function patternValidations() {\n      var patternProperties = this.schema.patternProperties;\n\n      var block = '';\n\n      if ((typeof patternProperties === 'undefined' ? 'undefined' : _typeof(patternProperties)) === 'object') {\n        Object.keys(patternProperties).forEach(function (pattern) {\n          var subschema = patternProperties[pattern];\n          var validator = new Validator(subschema);\n          block += '\\n          if (key.match(\\'' + pattern + '\\')) {\\n            matched = true\\n            ' + validator.compile() + '\\n          }\\n        ';\n        });\n      }\n\n      return block;\n    }\n\n    /**\n     * Additional Validations\n     *\n     * @description\n     * Generate validation code, either from a subschema for properties not\n     * defined in the schema, or to disallow properties not defined in the\n     * schema.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'additionalValidations',\n    value: function additionalValidations() {\n      var _schema = this.schema,\n          properties = _schema.properties,\n          additionalProperties = _schema.additionalProperties,\n          address = this.address;\n\n      var validations = '';\n      var block = '';\n\n      // catch additional unmatched properties\n      var conditions = ['matched !== true'];\n\n      // ignore defined properties\n      Object.keys(properties || {}).forEach(function (key) {\n        conditions.push('key !== \\'' + key + '\\'');\n      });\n\n      // validate additional properties\n      if ((typeof additionalProperties === 'undefined' ? 'undefined' : _typeof(additionalProperties)) === 'object') {\n        var subschema = additionalProperties;\n        var validator = new Validator(subschema, { address: address + '[APKey]' });\n        block += '\\n        // validate additional properties\\n        if (' + conditions.join(' && ') + ') {\\n          ' + validator.compile() + '\\n        }\\n      ';\n      }\n\n      // error for additional properties\n      if (additionalProperties === false) {\n        block += '\\n        // validate non-presence of additional properties\\n        if (' + conditions.join(' && ') + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'additionalProperties\\',\\n            message: key + \\' is not a defined property\\'\\n          })\\n        }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * patternProperties\n     *\n     * @description\n     * Generate validation code for properties matching a pattern\n     * defined by the property name (key), which must be a string\n     * representing a valid regular expression.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'patternProperties',\n    value: function patternProperties() {\n      var block = '';\n\n      if (!this.otherPropertiesCalled) {\n        this.otherPropertiesCalled = true;\n        block += this.otherProperties();\n      }\n\n      return block;\n    }\n\n    /**\n     * additionalProperties\n     *\n     * @description\n     * Generate validation code for additional properties not defined\n     * in the schema, or disallow additional properties if the value of\n     * `additionalProperties` in the schema is `false`.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'additionalProperties',\n    value: function additionalProperties() {\n      var block = '';\n\n      if (!this.otherPropertiesCalled) {\n        this.otherPropertiesCalled = true;\n        block += this.otherProperties();\n      }\n\n      return block;\n    }\n\n    /**\n     * minProperties\n     *\n     * @description\n     * > An object instance is valid against \"minProperties\" if its number of\n     * > properties is greater than, or equal to, the value of this keyword.\n     * > JSON Schema Validation Section 5.4.2\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'minProperties',\n    value: function minProperties() {\n      var minProperties = this.schema.minProperties,\n          address = this.address;\n\n\n      return '\\n        // ' + address + ' min properties\\n        if (Object.keys(value).length < ' + minProperties + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'minProperties\\',\\n            message: \\'too few properties\\'\\n          })\\n        }\\n    ';\n    }\n\n    /**\n     * maxProperties\n     *\n     * @description\n     * > An object instance is valid against \"maxProperties\" if its number of\n     * > properties is less than, or equal to, the value of this keyword.\n     * > JSON Schema Validation Section 5.4.1\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'maxProperties',\n    value: function maxProperties() {\n      var maxProperties = this.schema.maxProperties,\n          address = this.address;\n\n\n      return '\\n        // ' + address + ' max properties\\n        if (Object.keys(value).length > ' + maxProperties + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'maxProperties\\',\\n            message: \\'too many properties\\'\\n          })\\n        }\\n    ';\n    }\n\n    /**\n     * Dependencies\n     *\n     * @description\n     * > For all (name, schema) pair of schema dependencies, if the instance has\n     * > a property by this name, then it must also validate successfully against\n     * > the schema.\n     * >\n     * > Note that this is the instance itself which must validate successfully,\n     * > not the value associated with the property name.\n     * >\n     * > For each (name, propertyset) pair of property dependencies, if the\n     * > instance has a property by this name, then it must also have properties\n     * > with the same names as propertyset.\n     * > JSON Schema Validation Section 5.4.5.2\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'dependencies',\n    value: function dependencies() {\n      var dependencies = this.schema.dependencies,\n          address = this.address;\n\n\n      var block = this.push();\n\n      if ((typeof dependencies === 'undefined' ? 'undefined' : _typeof(dependencies)) === 'object') {\n        Object.keys(dependencies).forEach(function (key) {\n          var dependency = dependencies[key];\n          var conditions = [];\n\n          if (Array.isArray(dependency)) {\n            dependency.forEach(function (item) {\n              conditions.push('container[\\'' + item + '\\'] === undefined');\n            });\n\n            block += '\\n            if (container[\\'' + key + '\\'] !== undefined && (' + conditions.join(' || ') + ')) {\\n              valid = false\\n              errors.push({\\n                keyword: \\'dependencies\\',\\n                message: \\'unmet dependencies\\'\\n              })\\n            }\\n          ';\n          } else if ((typeof dependency === 'undefined' ? 'undefined' : _typeof(dependency)) === 'object') {\n            var subschema = dependency;\n            var validator = new Validator(subschema, { address: address });\n\n            block += '\\n            if (container[\\'' + key + '\\'] !== undefined) {\\n              ' + validator.compile() + '\\n            }\\n          ';\n          }\n        });\n      }\n\n      block += this.pop();\n\n      return block;\n    }\n\n    /**\n     * Required\n     *\n     * @description\n     * > An object instance is valid against this keyword if its property set\n     * > contains all elements in this keyword's array value.\n     * > JSON Schema Validation Section 5.4.3\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'required',\n    value: function required() {\n      var properties = this.schema.properties,\n          address = this.address;\n\n      var block = '';\n\n      block += '\\n      // validate ' + address + ' presence\\n      if (value === undefined) {\\n        valid = false\\n        errors.push({\\n          keyword: \\'required\\',\\n          message: \\'is required\\'\\n        })\\n      }\\n    ';\n\n      return block;\n    }\n\n    /**\n     * additionalItems\n     *\n     * @description\n     * > Successful validation of an array instance with regards to these two\n     * > keywords is determined as follows: if \"items\" is not present, or its\n     * > value is an object, validation of the instance always succeeds,\n     * > regardless of the value of \"additionalItems\"; if the value of\n     * > \"additionalItems\" is boolean value true or an object, validation of\n     * > the instance always succeeds; if the value of \"additionalItems\" is\n     * > boolean value false and the value of \"items\" is an array, the\n     * > instance is valid if its size is less than, or equal to, the size\n     * > of \"items\".\n     * > JSON Schema Validation Section 5.3.1\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'additionalItems',\n    value: function additionalItems() {\n      var _schema2 = this.schema,\n          items = _schema2.items,\n          additionalItems = _schema2.additionalItems,\n          address = this.address;\n\n      var block = '';\n\n      if (additionalItems === false && Array.isArray(items)) {\n        block += '\\n        // don\\'t allow additional items\\n        if (value.length > ' + items.length + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'additionalItems\\',\\n            message: \\'additional items not allowed\\'\\n          })\\n        }\\n      ';\n      }\n\n      if ((typeof additionalItems === 'undefined' ? 'undefined' : _typeof(additionalItems)) === 'object' && additionalItems !== null && Array.isArray(items)) {\n        var subschema = additionalItems;\n        var validator = new Validator(subschema);\n        var counter = Validator.counter;\n\n        block += '\\n        // additional items\\n        ' + this.push() + '\\n\\n        for (var i' + counter + ' = ' + items.length + '; i' + counter + ' <= container.length; i' + counter + '++) {\\n          value = container[i' + counter + ']\\n          ' + validator.compile() + '\\n        }\\n\\n        ' + this.pop() + '\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * Items\n     *\n     * @description\n     * > Successful validation of an array instance with regards to these two\n     * > keywords is determined as follows: if \"items\" is not present, or its\n     * > value is an object, validation of the instance always succeeds,\n     * > regardless of the value of \"additionalItems\"; if the value of\n     * > \"additionalItems\" is boolean value true or an object, validation of\n     * > the instance always succeeds; if the value of \"additionalItems\" is\n     * > boolean value false and the value of \"items\" is an array, the\n     * > instance is valid if its size is less than, or equal to, the size\n     * > of \"items\".\n     * > JSON Schema Validation Section 5.3.1\n     *\n     * Code to generate\n     *\n     *     // this outer conditional is generated by this.array()\n     *     if (Array.isArray(value) {\n     *       let parent = value\n     *       for (let i = 0; i < parent.length; i++) {\n     *         value = parent[i]\n     *         // other validation code depending on value here\n     *       }\n     *       value = parent\n     *     }\n     *\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'items',\n    value: function items() {\n      var items = this.schema.items,\n          address = this.address;\n\n      var block = '';\n\n      // if items is an array\n      if (Array.isArray(items)) {\n        block += this.push();\n\n        items.forEach(function (item, index) {\n          var subschema = item;\n          var validator = new Validator(subschema, { address: address + '[' + index + ']' });\n\n          block += '\\n          // item #' + index + '\\n          value = container[' + index + ']\\n          ' + validator.compile() + '\\n        ';\n        });\n\n        block += this.pop();\n\n        // if items is an object\n      } else if ((typeof items === 'undefined' ? 'undefined' : _typeof(items)) === 'object' && items !== null) {\n        var subschema = items;\n        var validator = new Validator(subschema);\n        var counter = Validator.counter;\n\n        block += '\\n        // items\\n        ' + this.push() + '\\n\\n        for (var i' + counter + ' = 0; i' + counter + ' < container.length; i' + counter + '++) {\\n          // read array element\\n          value = container[i' + counter + ']\\n          ' + validator.compile() + '\\n        }\\n\\n        ' + this.pop() + '\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * minItems\n     *\n     * @description\n     * > An array instance is valid against \"minItems\" if its size is greater\n     * > than, or equal to, the value of this keyword.\n     * > JSON Schema Validation Section 5.3.3\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'minItems',\n    value: function minItems() {\n      var minItems = this.schema.minItems,\n          address = this.address;\n\n\n      return '\\n        // ' + address + ' min items\\n        if (value.length < ' + minItems + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'minItems\\',\\n            message: \\'too few properties\\'\\n          })\\n        }\\n    ';\n    }\n\n    /**\n     * maxItems\n     *\n     * @description\n     * > An array instance is valid against \"maxItems\" if its size is less\n     * > than, or equal to, the value of this keyword.\n     * > JSON Schema Validation Section 5.3.2\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'maxItems',\n    value: function maxItems() {\n      var maxItems = this.schema.maxItems,\n          address = this.address;\n\n\n      return '\\n        // ' + address + ' max items\\n        if (value.length > ' + maxItems + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'maxItems\\',\\n            message: \\'too many properties\\'\\n          })\\n        }\\n    ';\n    }\n\n    /**\n     * uniqueItems\n     *\n     * @description\n     * > If this keyword has boolean value false, the instance validates\n     * > successfully. If it has boolean value true, the instance validates\n     * > successfully if all of its elements are unique.\n     * > JSON Schema Validation Section 5.3.4\n     *\n     * TODO\n     * optimize\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'uniqueItems',\n    value: function uniqueItems() {\n      var uniqueItems = this.schema.uniqueItems,\n          address = this.address;\n\n      var block = '';\n\n      if (uniqueItems === true) {\n        block += '\\n        // validate ' + address + ' unique items\\n        let values = value.map(v => JSON.stringify(v)) // TODO: optimize\\n        let set = new Set(values)\\n        if (values.length !== set.size) {\\n          valid = false\\n          errors.push({\\n            keyword: \\'uniqueItems\\',\\n            message: \\'items must be unique\\'\\n          })\\n        }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * minLength\n     *\n     * @description\n     * > A string instance is valid against this keyword if its length is\n     * > greater than, or equal to, the value of this keyword. The length of\n     * > a string instance is defined as the number of its characters as\n     * > defined by RFC 4627 [RFC4627].\n     * > JSON Schema Validation Section 5.2.2\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'minLength',\n    value: function minLength() {\n      var minLength = this.schema.minLength,\n          address = this.address;\n\n\n      return '\\n        // ' + address + ' validate minLength\\n        if (Array.from(value).length < ' + minLength + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'minLength\\',\\n            message: \\'too short\\'\\n          })\\n        }\\n    ';\n    }\n\n    /**\n     * maxLength\n     *\n     * @description\n     * > A string instance is valid against this keyword if its length is less\n     * > than, or equal to, the value of this keyword. The length of a string\n     * > instance is defined as the number of its characters as defined by\n     * > RFC 4627 [RFC4627].\n     * > JSON Schema Validation Section 5.2.1\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'maxLength',\n    value: function maxLength() {\n      var maxLength = this.schema.maxLength,\n          address = this.address;\n\n\n      return '\\n        // ' + address + ' validate maxLength\\n        if (Array.from(value).length > ' + maxLength + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'maxLength\\',\\n            message: \\'too long\\'\\n          })\\n        }\\n    ';\n    }\n\n    /**\n     * Pattern\n     *\n     * @description\n     * > A string instance is considered valid if the regular expression\n     * > matches the instance successfully.\n     * > JSON Schema Validation Section 5.2.3\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'pattern',\n    value: function pattern() {\n      var pattern = this.schema.pattern,\n          address = this.address;\n\n\n      if (pattern) {\n        return '\\n          // ' + address + ' validate pattern\\n          if (!value.match(new RegExp(\\'' + pattern + '\\'))) {\\n            valid = false\\n            errors.push({\\n              keyword: \\'pattern\\',\\n              message: \\'does not match the required pattern\\'\\n            })\\n          }\\n      ';\n      }\n    }\n\n    /**\n     * Format\n     *\n     * @description\n     * > Structural validation alone may be insufficient to validate that\n     * > an instance meets all the requirements of an application. The\n     * > \"format\" keyword is defined to allow interoperable semantic\n     * > validation for a fixed subset of values which are accurately\n     * > described by authoritative resources, be they RFCs or other\n     * > external specifications.\n     * > JSON Schema Validation Section 7.1\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'format',\n    value: function format() {\n      var format = this.schema.format,\n          address = this.address;\n\n      var matcher = formats.resolve(format);\n\n      if (matcher) {\n        return '\\n      // ' + address + ' validate format\\n      if (!value.match(' + matcher + ')) {\\n        valid = false\\n        errors.push({\\n          keyword: \\'format\\',\\n          message: \\'is not \"' + format + '\" format\\'\\n        })\\n      }\\n      ';\n      }\n    }\n\n    /**\n     * Minimum\n     *\n     * @description\n     * > Successful validation depends on the presence and value of\n     * > \"exclusiveMinimum\": if \"exclusiveMinimum\" is not present, or has\n     * > boolean value false, then the instance is valid if it is greater\n     * > than, or equal to, the value of \"minimum\"; if \"exclusiveMinimum\" is\n     * > present and has boolean value true, the instance is valid if it is\n     * > strictly greater than the value of \"minimum\".\n     * > JSON Schema Validation Section 5.1.3\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'minimum',\n    value: function minimum() {\n      var _schema3 = this.schema,\n          minimum = _schema3.minimum,\n          exclusiveMinimum = _schema3.exclusiveMinimum,\n          address = this.address;\n\n      var operator = exclusiveMinimum === true ? '<=' : '<';\n\n      return '\\n        // ' + address + ' validate minimum\\n        if (value ' + operator + ' ' + minimum + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'minimum\\',\\n            message: \\'too small\\'\\n          })\\n        }\\n    ';\n    }\n\n    /**\n     * Maximum\n     *\n     * @description\n     * > Successful validation depends on the presence and value of\n     * > \"exclusiveMaximum\": if \"exclusiveMaximum\" is not present, or has\n     * > boolean value false, then the instance is valid if it is lower than,\n     * > or equal to, the value of \"maximum\"; if \"exclusiveMaximum\" has\n     * > boolean value true, the instance is valid if it is strictly lower\n     * > than the value of \"maximum\".\n     * > JSON Schema Validation Section 5.1.2\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'maximum',\n    value: function maximum() {\n      var _schema4 = this.schema,\n          maximum = _schema4.maximum,\n          exclusiveMaximum = _schema4.exclusiveMaximum,\n          address = this.address;\n\n      var operator = exclusiveMaximum === true ? '>=' : '>';\n\n      return '\\n        // ' + address + ' validate maximum\\n        if (value ' + operator + ' ' + maximum + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'maximum\\',\\n            message: \\'too large\\'\\n          })\\n        }\\n    ';\n    }\n\n    /**\n     * multipleOf\n     *\n     * @description\n     * > A numeric instance is valid against \"multipleOf\" if the result of\n     * > the division of the instance by this keyword's value is an integer.\n     * > JSON Schema Validation Section 5.1.1\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: 'multipleOf',\n    value: function multipleOf() {\n      var multipleOf = this.schema.multipleOf;\n\n      var block = '';\n\n      if (typeof multipleOf === 'number') {\n        var length = multipleOf.toString().length;\n        var decimals = length - multipleOf.toFixed(0).length - 1;\n        var pow = decimals > 0 ? Math.pow(10, decimals) : 1;\n        var condition = void 0;\n\n        if (decimals > 0) {\n          condition = '(value * ' + pow + ') % ' + multipleOf * pow + ' !== 0';\n        } else {\n          condition = 'value % ' + multipleOf + ' !== 0';\n        }\n\n        block += '\\n        if (' + condition + ') {\\n          valid = false\\n          errors.push({\\n            keyword: \\'multipleOf\\',\\n            message: \\'must be a multiple of ' + multipleOf + '\\'\\n          })\\n        }\\n      ';\n      }\n\n      return block;\n    }\n  }]);\n\n  return Validator;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = Validator;","'use strict';\n\n/**\n * Module dependencies\n * @ignore\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar JSONPointer = require('./JSONPointer');\n\n/**\n * Modes\n */\nvar THROW = 0;\nvar RECOVER = 1;\nvar SILENT = 2;\n\n/**\n * Operations list\n */\nvar OPERATIONS = ['add', 'remove', 'replace', 'move', 'copy', 'test'];\n\n/**\n * Patch\n *\n * @class\n * Implements RFC 6902: JavaScript Object Notation (JSON) Patch\n * https://tools.ietf.org/html/rfc6902\n */\n\nvar JSONPatch = function () {\n\n  /**\n   * Constructor\n   *\n   * @param {Array} ops\n   */\n  function JSONPatch(ops) {\n    _classCallCheck(this, JSONPatch);\n\n    this.ops = ops || [];\n  }\n\n  /**\n   * Apply\n   *\n   * @todo handle errors/roll back\n   * @todo protect properties that are private in the schema\n   * @todo map JSON Pointers real property names\n   *\n   * @param {Object} target\n   */\n\n\n  _createClass(JSONPatch, [{\n    key: 'apply',\n    value: function apply(target) {\n      var _this = this;\n\n      this.ops.forEach(function (operation) {\n        var op = operation.op;\n\n        if (!op) {\n          throw new Error('Missing \"op\" in JSON Patch operation');\n        }\n\n        if (OPERATIONS.indexOf(op) === -1) {\n          throw new Error('Invalid \"op\" in JSON Patch operation');\n        }\n\n        if (!operation.path) {\n          throw new Error('Missing \"path\" in JSON Patch operation');\n        }\n\n        _this[op](operation, target);\n      });\n    }\n\n    /**\n     * Add\n     *\n     * @param {Object} op\n     * @param {Object} target\n     */\n\n  }, {\n    key: 'add',\n    value: function add(op, target) {\n      if (op.value === undefined) {\n        throw new Error('Missing \"value\" in JSON Patch add operation');\n      }\n\n      var pointer = new JSONPointer(op.path, SILENT);\n      pointer.add(target, op.value);\n    }\n\n    /**\n     * Remove\n     *\n     * @param {Object} op\n     * @param {Object} target\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(op, target) {\n      var pointer = new JSONPointer(op.path);\n      pointer.remove(target);\n    }\n\n    /**\n     * Replace\n     *\n     * @param {Object} op\n     * @param {Object} target\n     */\n\n  }, {\n    key: 'replace',\n    value: function replace(op, target) {\n      if (op.value === undefined) {\n        throw new Error('Missing \"value\" in JSON Patch replace operation');\n      }\n\n      var pointer = new JSONPointer(op.path);\n      pointer.replace(target, op.value);\n    }\n\n    /**\n     * Move\n     *\n     * @param {Object} op\n     * @param {Object} target\n     */\n\n  }, {\n    key: 'move',\n    value: function move(op, target) {\n      if (op.from === undefined) {\n        throw new Error('Missing \"from\" in JSON Patch move operation');\n      }\n\n      if (op.path.match(new RegExp('^' + op.from))) {\n        throw new Error('Invalid \"from\" in JSON Patch move operation');\n      }\n\n      var pointer = new JSONPointer(op.path);\n      var from = new JSONPointer(op.from);\n      var value = from.get(target);\n\n      from.remove(target);\n      pointer.add(target, value);\n    }\n\n    /**\n     * Copy\n     *\n     * @param {Object} op\n     * @param {Object} target\n     */\n\n  }, {\n    key: 'copy',\n    value: function copy(op, target) {\n      if (op.from === undefined) {\n        throw new Error('Missing \"from\" in JSON Patch copy operation');\n      }\n\n      var pointer = new JSONPointer(op.path);\n      var from = new JSONPointer(op.from);\n      var value = from.get(target);\n\n      pointer.add(target, value);\n    }\n\n    /**\n     * Test\n     *\n     * @param {Object} op\n     * @param {Object} target\n     */\n\n  }, {\n    key: 'test',\n    value: function test(op, target) {\n      if (op.value === undefined) {\n        throw new Error('Missing \"value\" in JSON Patch test operation');\n      }\n\n      var pointer = new JSONPointer(op.path);\n      var value = pointer.get(target);\n\n      switch (_typeof(op.value)) {\n        //case 'string':\n        //case 'number':\n        //case 'boolean':\n        //  if (value !== op.value) {\n        //    throw new Error('Mismatching JSON Patch test value')\n        //  }\n        default:\n          if (value !== op.value) {\n            throw new Error('Mismatching JSON Patch test value');\n          }\n      }\n    }\n  }]);\n\n  return JSONPatch;\n}();\n\n/**\n * Exports\n */\n\n\nmodule.exports = JSONPatch;","'use strict';\n\n/**\n * Initializer\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Initializer = function () {\n\n  /**\n   * constructor\n   */\n  function Initializer(schema, options) {\n    _classCallCheck(this, Initializer);\n\n    Object.assign(this, options || {});\n    this.root = this.root || this;\n\n    this.root.depth = this.root.depth || 1;\n\n    if (this.level > this.root.depth) {\n      this.root.depth = this.level;\n    }\n\n    this.level = this.level || 0;\n    this.schema = schema;\n  }\n\n  /**\n   * compile (static)\n   */\n\n\n  _createClass(Initializer, [{\n    key: 'compile',\n\n\n    /**\n     * compile\n     */\n    value: function compile() {\n      var root = this.root,\n          depth = this.depth,\n          level = this.level;\n\n      var declarations = '';\n      var body = '';\n\n      // traverse the schema and generate code\n      body += this.default();\n      body += this.properties();\n      //body += this.additionalProperties()\n      body += this.items();\n      //body += this.additionalItems()\n\n\n      // value\n      body += this.member();\n      body += this.item();\n\n      // after traversing the schema\n      // generate the variable declarations\n      if (root === this) {\n        for (var i = 1; i <= this.root.depth; i++) {\n          declarations += this.declaration(i);\n        }\n\n        return '\\n        options = options || {}\\n\\n        if (options.filter === false) {\\n          Object.assign(target, JSON.parse(JSON.stringify(source)))\\n        }\\n\\n        ' + declarations + '\\n        ' + body + '\\n      ';\n      }\n\n      return body;\n    }\n\n    /**\n     * declaration\n     */\n\n  }, {\n    key: 'declaration',\n    value: function declaration(level) {\n      return '\\n      var target' + level + '\\n      var source' + level + '\\n      var count' + level + '\\n    ';\n    }\n\n    /**\n     * default\n     */\n\n  }, {\n    key: 'default',\n    value: function _default() {\n      var schema = this.schema,\n          level = this.level,\n          key = this.key,\n          index = this.index;\n      var value = schema.default; // rename default to value because it's a keyword and syntax highlighter breaks\n\n      var block = '';\n\n      if (schema.hasOwnProperty('default')) {\n\n        if (key) {\n          block += '\\n          target' + level + '[\\'' + key + '\\'] = ' + JSON.stringify(value) + '\\n        ';\n        }\n\n        if (index) {\n          block += '\\n          target' + level + '[' + index + '] = ' + JSON.stringify(value) + '\\n        ';\n        }\n\n        if (level > 1) {\n          block += '\\n          count' + level + '++\\n        ';\n        }\n\n        block = '\\n        if (options.defaults !== false) {\\n          ' + block + '\\n        }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * member\n     */\n\n  }, {\n    key: 'member',\n    value: function member() {\n      var schema = this.schema,\n          root = this.root,\n          level = this.level,\n          key = this.key;\n      var properties = schema.properties,\n          additionalProperties = schema.additionalProperties,\n          items = schema.items,\n          additionalItems = schema.additionalItems;\n\n      var block = '';\n\n      // `key` tells us to treat this subschema as an object member vs an array item\n      // and the absence of the other values here indicates we are dealing with a\n      // primitive value\n      if (key && !properties && !additionalProperties && !items && !additionalItems) {\n\n        // first generate the assignment statement\n        block += '\\n        target' + level + '[\\'' + key + '\\'] = source' + level + '[\\'' + key + '\\']\\n      ';\n\n        // for nested container objects, add the counter incrementing statement\n        if (level > 1) {\n          block += '\\n          count' + level + '++\\n        ';\n        }\n\n        // wrap the foregoing in a check for presence on the source\n        block = '\\n        if (source' + level + '.hasOwnProperty(\\'' + key + '\\')) {\\n          ' + block + '\\n        }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * item\n     */\n\n  }, {\n    key: 'item',\n    value: function item() {\n      var schema = this.schema,\n          root = this.root,\n          level = this.level,\n          index = this.index;\n      var properties = schema.properties,\n          additionalProperties = schema.additionalProperties,\n          items = schema.items,\n          additionalItems = schema.additionalItems;\n\n      var block = '';\n\n      if (index && !properties && !additionalProperties && !items && !additionalItems) {\n\n        block += '\\n        target' + level + '[' + index + '] = source' + level + '[' + index + ']\\n      ';\n\n        if (level > 1) {\n          block += '\\n          count' + level + '++\\n        ';\n        }\n\n        block = '\\n        if (' + index + ' < len) {\\n          ' + block + '\\n        }\\n      ';\n      }\n\n      return block;\n    }\n\n    /**\n     * properties\n     */\n\n  }, {\n    key: 'properties',\n    value: function properties() {\n      var schema = this.schema,\n          root = this.root,\n          level = this.level,\n          key = this.key,\n          index = this.index;\n      var properties = schema.properties;\n\n      var block = '';\n\n      if (properties) {\n        Object.keys(properties).forEach(function (key) {\n          var subschema = properties[key];\n          var initializer = new Initializer(subschema, { key: key, root: root, level: level + 1 });\n\n          block += initializer.compile();\n        });\n\n        // root-level properties boilerplate\n        if (root === this) {\n          block = '\\n          if (typeof source === \\'object\\' && source !== null && !Array.isArray(source)) {\\n            if (typeof target !== \\'object\\') {\\n              throw new Error(\\'?\\')\\n            }\\n\\n            source1 = source\\n            target1 = target\\n            count1 = 0\\n\\n            ' + block + '\\n          }\\n        ';\n\n          // nested properties boilerplate\n        } else {\n\n          if (index) {\n            block = '\\n            if (' + index + ' < source' + level + '.length || typeof source' + level + '[' + index + '] === \\'object\\') {\\n\\n              source' + (level + 1) + ' = source' + level + '[' + index + '] || {}\\n              count' + (level + 1) + ' = 0\\n\\n              if (' + index + ' < target' + level + '.length || typeof target' + level + '[' + index + '] !== \\'object\\') {\\n                target' + (level + 1) + ' = {}\\n                if (' + index + ' < source' + level + '.length) {\\n                  count' + (level + 1) + '++\\n                }\\n              } else {\\n                target' + (level + 1) + ' = target' + level + '[' + index + ']\\n              }\\n\\n              ' + block + '\\n\\n              if (count' + (level + 1) + ' > 0) {\\n                target' + level + '[' + index + '] = target' + (level + 1) + '\\n                count' + level + '++\\n              }\\n\\n            } else {\\n              target' + level + '[' + index + '] = source' + level + '[' + index + ']\\n              count' + level + '++\\n            }\\n          ';\n          }\n\n          if (key) {\n            block = '\\n            if ((typeof source' + level + '[\\'' + key + '\\'] === \\'object\\'\\n                  && source' + level + '[\\'' + key + '\\'] !== null\\n                  && !Array.isArray(source' + level + '[\\'' + key + '\\']))\\n                || !source' + level + '.hasOwnProperty(\\'' + key + '\\')) {\\n\\n              source' + (level + 1) + ' = source' + level + '[\\'' + key + '\\'] || {}\\n              count' + (level + 1) + ' = 0\\n\\n              if (!target' + level + '.hasOwnProperty(\\'' + key + '\\')\\n                  || typeof target' + level + '[\\'' + key + '\\'] !== \\'object\\'\\n                  || target' + level + '[\\'' + key + '\\'] === null\\n                  || Array.isArray(target' + level + '[\\'' + key + '\\'])) {\\n                target' + (level + 1) + ' = {}\\n                if (source' + level + '.hasOwnProperty(\\'' + key + '\\')) {\\n                  count' + (level + 1) + '++\\n                }\\n              } else {\\n                target' + (level + 1) + ' = target' + level + '[\\'' + key + '\\']\\n                count' + (level + 1) + '++\\n              }\\n\\n              ' + block + '\\n\\n              if (count' + (level + 1) + ' > 0) {\\n                target' + level + '[\\'' + key + '\\'] = target' + (level + 1) + '\\n                count' + level + '++\\n              }\\n\\n            } else {\\n              target' + level + '[\\'' + key + '\\'] = source' + level + '[\\'' + key + '\\']\\n              count' + level + '++\\n            }\\n          ';\n          }\n        }\n      }\n\n      return block;\n    }\n\n    /**\n     *\n     */\n\n  }, {\n    key: 'additionalProperties',\n    value: function additionalProperties() {}\n\n    /**\n     * items\n     */\n\n  }, {\n    key: 'items',\n    value: function items() {\n      var schema = this.schema,\n          root = this.root,\n          level = this.level,\n          key = this.key,\n          index = this.index;\n      var items = schema.items;\n\n      var block = '';\n\n      if (items) {\n\n        if (Array.isArray(items)) {\n          // TODO\n          //\n          //\n          //\n          //\n          //\n          // ...\n\n        } else if ((typeof items === 'undefined' ? 'undefined' : _typeof(items)) === 'object' && items !== null) {\n          var _index = 'i' + (level + 1);\n          var initializer = new Initializer(items, { index: _index, root: root, level: level + 1 });\n\n          block += '\\n          var sLen = source' + (level + 1) + '.length || 0\\n          var tLen = target' + (level + 1) + '.length || 0\\n          var len = 0\\n\\n          if (sLen > len) { len = sLen }\\n          // THIS IS WRONG, CAUSED SIMPLE ARRAY INIT TO FAIL (OVERWRITE\\n          // EXISTING TARGET VALUES WITH UNDEFINED WHEN SOURCE IS SHORTER THAN\\n          // TARGET). LEAVING HERE UNTIL WE FINISH TESTING AND SEE WHY IT MIGHT\\n          // HAVE BEEN HERE IN THE FIRST PLACE.\\n          //\\n          // if (tLen > len) { len = tLen }\\n\\n          for (var ' + _index + ' = 0; ' + _index + ' < len; ' + _index + '++) {\\n            ' + initializer.compile() + '\\n          }\\n        ';\n        }\n\n        // root-level properties boilerplate\n        if (root === this) {\n          block = '\\n          if (Array.isArray(source)) {\\n            if (!Array.isArray(target)) {\\n              throw new Error(\\'?\\')\\n            }\\n\\n            source1 = source\\n            target1 = target\\n\\n            ' + block + '\\n          }\\n        ';\n\n          // nested properties boilerplate\n        } else {\n          block = '\\n          if (Array.isArray(source' + level + '[\\'' + key + '\\']) || !source' + level + '.hasOwnProperty(\\'' + key + '\\')) {\\n\\n            source' + (level + 1) + ' = source' + level + '[\\'' + key + '\\'] || []\\n            count' + (level + 1) + ' = 0\\n\\n            if (!target' + level + '.hasOwnProperty(\\'' + key + '\\') || !Array.isArray(target' + level + '[\\'' + key + '\\'])) {\\n              target' + (level + 1) + ' = []\\n                if (source' + level + '.hasOwnProperty(\\'' + key + '\\')) {\\n                  count' + (level + 1) + '++\\n                }\\n\\n            } else {\\n              target' + (level + 1) + ' = target' + level + '[\\'' + key + '\\']\\n              count' + (level + 1) + '++\\n            }\\n\\n            ' + block + '\\n\\n            if (count' + (level + 1) + ' > 0) {\\n              target' + level + '[\\'' + key + '\\'] = target' + (level + 1) + '\\n              count' + level + '++\\n            }\\n\\n          } else {\\n            target' + level + '[\\'' + key + '\\'] = source' + level + '[\\'' + key + '\\']\\n            count' + level + '++\\n          }\\n        ';\n        }\n      }\n\n      return block;\n    }\n\n    /**\n     *\n     */\n\n  }, {\n    key: 'additionalItems',\n    value: function additionalItems() {}\n  }], [{\n    key: 'compile',\n    value: function compile(schema) {\n      var initializer = new Initializer(schema);\n      var block = initializer.compile();\n\n      //console.log(beautify(block))\n      try {\n        return new Function('target', 'source', 'options', block);\n      } catch (e) {\n        console.log(e, e.stack);\n      }\n    }\n  }]);\n\n  return Initializer;\n}();\n\nmodule.exports = Initializer;","'use strict';\n\n/**\n * JSON Schema Formats\n *\n * TODO\n * Is there a good way to express these over multiple lines with comments\n * for easier debugging and auditing?\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DATETIME_REGEXP = /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)$/i;\nvar URI_REGEXP = /^(?:[a-z][a-z0-9+-.]*)?(?:\\:|\\/)\\/?[^\\s]*$/i;\nvar EMAIL_REGEXP = /^[a-z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i;\nvar IPV4_REGEXP = /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/;\nvar IPV6_REGEXP = /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i;\nvar HOSTNAME_REGEXP = /^[a-z](?:(?:[-0-9a-z]{0,61})?[0-9a-z])?(\\.[a-z](?:(?:[-0-9a-z]{0,61})?[0-9a-z])?)*$/i;\n\n/**\n * Formats\n */\n\nvar Formats = function () {\n  function Formats() {\n    _classCallCheck(this, Formats);\n  }\n\n  _createClass(Formats, [{\n    key: 'register',\n\n\n    /**\n     * Register\n     *\n     * @description\n     * Register a new mapping from named format to RegExp instance\n     *\n     * TODO\n     * We can do some extra validation of the RegExp to\n     * ensure it's the acceptable subset of RegExps allowed\n     * by JSON Schema.\n     *\n     * @param {string} name\n     * @param {RegExp} pattern\n     * @returns {RegExp}\n     */\n    value: function register(name, pattern) {\n      // verify name is a string\n      if (typeof name !== 'string') {\n        throw new Error('Format name must be a string');\n      }\n\n      // cast a string to RegExp\n      if (typeof pattern === 'string') {\n        pattern = new RegExp(pattern);\n      }\n\n      return this[name] = pattern;\n    }\n\n    /**\n     * Resolve\n     *\n     * @description\n     * Given a format name, return the corresponding registered validation. In the\n     * event a format is not registered, throw an error.\n     *\n     * @param {string} name\n     * @returns {RegExp}\n     */\n\n  }, {\n    key: 'resolve',\n    value: function resolve(name) {\n      var format = this[name];\n\n      if (!format) {\n        throw new Error('Unknown JSON Schema format.');\n      }\n\n      return format;\n    }\n\n    /**\n     * Test\n     *\n     * @description\n     * Test that a value conforms to a format.\n     *\n     * @param {string} name\n     * @param {string} value\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: 'test',\n    value: function test(name, value) {\n      var format = this.resolve(name);\n      return format.test(value);\n    }\n  }], [{\n    key: 'initialize',\n\n\n    /**\n     * Initialize\n     *\n     * @description\n     * Create a new Formats instance and register default formats\n     *\n     * @returns {Formats}\n     */\n    value: function initialize() {\n      var formats = new Formats();\n      formats.register('date-time', DATETIME_REGEXP);\n      formats.register('uri', URI_REGEXP);\n      formats.register('email', EMAIL_REGEXP);\n      formats.register('ipv4', IPV4_REGEXP);\n      formats.register('ipv6', IPV6_REGEXP);\n      formats.register('hostname', HOSTNAME_REGEXP);\n      return formats;\n    }\n  }]);\n\n  return Formats;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = Formats.initialize();","'use strict';\n\n/**\n * Dependencies\n * @ignore\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = require('@trust/json-document'),\n    JSONDocument = _require.JSONDocument;\n\nvar JWKSchema = require('../schemas/JWKSchema');\nvar JWA = require('./JWA');\n\n/**\n * JWK Class\n */\n\nvar JWK = function (_JSONDocument) {\n  _inherits(JWK, _JSONDocument);\n\n  function JWK() {\n    _classCallCheck(this, JWK);\n\n    return _possibleConstructorReturn(this, (JWK.__proto__ || Object.getPrototypeOf(JWK)).apply(this, arguments));\n  }\n\n  _createClass(JWK, null, [{\n    key: 'importKey',\n\n\n    /**\n     * importKey\n     *\n     * TODO:\n     * - should this be on JWA?\n     */\n    value: function importKey(jwk) {\n      return JWA.importKey(jwk);\n    }\n  }, {\n    key: 'schema',\n\n\n    /**\n     * Schema\n     */\n    get: function get() {\n      return JWKSchema;\n    }\n  }]);\n\n  return JWK;\n}(JSONDocument);\n\n/**\n * Export\n */\n\n\nmodule.exports = JWK;","\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * DataError\n */\nvar DataError = function (_Error) {\n  _inherits(DataError, _Error);\n\n  function DataError(message) {\n    _classCallCheck(this, DataError);\n\n    return _possibleConstructorReturn(this, (DataError.__proto__ || Object.getPrototypeOf(DataError)).call(this, message));\n  }\n\n  return DataError;\n}(Error);\n\n/**\n * Export\n */\n\n\nmodule.exports = DataError;","'use strict';\n\nmodule.exports = {\n  DataError: require('./DataError'),\n  NotSupportedError: require('./NotSupportedError')\n};","\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * NotSupportedError\n */\nvar NotSupportedError = function (_Error) {\n  _inherits(NotSupportedError, _Error);\n\n  function NotSupportedError(alg) {\n    _classCallCheck(this, NotSupportedError);\n\n    var _this = _possibleConstructorReturn(this, (NotSupportedError.__proto__ || Object.getPrototypeOf(NotSupportedError)).call(this));\n\n    _this.message = alg + \" is not a supported algorithm\";\n    return _this;\n  }\n\n  return NotSupportedError;\n}(Error);\n\n/**\n * Export\n */\n\n\nmodule.exports = NotSupportedError;","'use strict';\n\nvar TextEncoder = global.TextEncoder ? global.TextEncoder // browser\n: require('text-encoding').TextEncoder; // node shim\nmodule.exports = TextEncoder;","module.exports = crypto;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Dependencies\n */\nvar base64url = require('base64url');\n\nvar _require = require('@trust/json-document'),\n    JSONDocument = _require.JSONDocument;\n\nvar JWTSchema = require('../schemas/JWTSchema');\nvar JWS = require('./JWS');\nvar DataError = require('../errors/DataError');\n\n/**\n * JWT\n */\n\nvar JWT = function (_JSONDocument) {\n  _inherits(JWT, _JSONDocument);\n\n  function JWT() {\n    _classCallCheck(this, JWT);\n\n    return _possibleConstructorReturn(this, (JWT.__proto__ || Object.getPrototypeOf(JWT)).apply(this, arguments));\n  }\n\n  _createClass(JWT, [{\n    key: 'isJWE',\n\n\n    /**\n     * isJWE\n     */\n    value: function isJWE() {\n      return !!this.header.enc;\n    }\n\n    /**\n     * resolveKeys\n     */\n\n  }, {\n    key: 'resolveKeys',\n    value: function resolveKeys(jwks) {\n      var kid = this.header.kid;\n      var keys = void 0,\n          match = void 0;\n\n      // treat an array as the \"keys\" property of a JWK Set\n      if (Array.isArray(jwks)) {\n        keys = jwks;\n      }\n\n      // presence of keys indicates object is a JWK Set\n      if (jwks.keys) {\n        keys = jwks.keys;\n      }\n\n      // wrap a plain object they is not a JWK Set in Array\n      if (!jwks.keys && (typeof jwks === 'undefined' ? 'undefined' : _typeof(jwks)) === 'object') {\n        keys = [jwks];\n      }\n\n      // ensure there are keys to search\n      if (!keys) {\n        throw new DataError('Invalid JWK argument');\n      }\n\n      // match by \"kid\" or \"use\" header\n      if (kid) {\n        match = keys.find(function (jwk) {\n          return jwk.kid === kid;\n        });\n      } else {\n        match = keys.find(function (jwk) {\n          return jwk.use === 'sig';\n        });\n      }\n\n      // assign matching key to JWT and return a boolean\n      if (match) {\n        this.key = match.cryptoKey;\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    /**\n     * encode\n     *\n     * @description\n     * Encode a JWT instance\n     *\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'encode',\n    value: function encode() {\n      // validate\n      var validation = this.validate();\n\n      if (!validation.valid) {\n        return Promise.reject(validation);\n      }\n\n      var token = this;\n\n      if (this.isJWE()) {\n        return JWE.encrypt(token);\n      } else {\n        return JWS.sign(token);\n      }\n    }\n\n    /**\n     * verify\n     *\n     * @description\n     * Verify a decoded JWT instance\n     *\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'verify',\n    value: function verify() {\n      var validation = this.validate();\n\n      if (!validation.valid) {\n        return Promise.reject(validation);\n      }\n\n      return JWS.verify(this);\n    }\n  }], [{\n    key: 'decode',\n\n\n    /**\n     * decode\n     *\n     * @description\n     * Decode a JSON Web Token\n     *\n     * @param {string} data\n     * @returns {JWT}\n     */\n    value: function decode(data) {\n      var ExtendedJWT = this;\n      var jwt = void 0;\n\n      if (typeof data !== 'string') {\n        throw new DataError('JWT must be a string');\n      }\n\n      // JSON of Flattened JSON Serialization\n      if (data.startsWith('{')) {\n        try {\n          data = JSON.parse(data, function () {});\n        } catch (error) {\n          throw new DataError('Invalid JWT serialization');\n        }\n\n        if (data.signatures || data.recipients) {\n          data.serialization = 'json';\n        } else {\n          data.serialization = 'flattened';\n        }\n\n        jwt = new ExtendedJWT(data, { filter: false });\n\n        // Compact Serialization\n      } else {\n        try {\n          var serialization = 'compact';\n          var segments = data.split('.');\n          var length = segments.length;\n\n          if (length !== 3 && length !== 5) {\n            throw new Error('Malformed JWT');\n          }\n\n          var header = JSON.parse(base64url.decode(segments[0]));\n\n          // JSON Web Signature\n          if (length === 3) {\n            var type = 'JWS';\n            var payload = JSON.parse(base64url.decode(segments[1]));\n            var signature = segments[2];\n\n            jwt = new ExtendedJWT({ type: type, segments: segments, header: header, payload: payload, signature: signature, serialization: serialization }, { filter: false });\n          }\n\n          // JSON Web Encryption\n          if (length === 5) {\n            //let type = 'JWE'\n            //let [protected, encryption_key, iv, ciphertext, tag] = segments\n\n            //jwt = new ExtendedJWT({\n            //  type,\n            //  protected: base64url.decode(JSON.parse(protected)),\n            //  encryption_key,\n            //  iv,\n            //  ciphertext,\n            //  tag,\n            //  serialization\n            //})\n          }\n        } catch (error) {\n          throw new DataError('Invalid JWT compact serialization');\n        }\n      }\n\n      return jwt;\n    }\n\n    /**\n     * encode\n     *\n     * @description\n     * Encode a JSON Web Token\n     *\n     * @param {Object} header\n     * @param {Object} payload\n     * @param {CryptoKey} key\n     *\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'encode',\n    value: function encode(header, payload, key) {\n      var jwt = new JWT(header, payload);\n      return jwt.encode(key);\n    }\n\n    /**\n     * verify\n     *\n     * @description\n     *\n     * @param {CryptoKey} key\n     * @param {string} token\n     *\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'verify',\n    value: function verify(key, token) {\n      var jwt = JWT.decode(token);\n      jwt.key = key;\n      return jwt.verify().then(function (verified) {\n        return jwt;\n      });\n    }\n  }, {\n    key: 'schema',\n\n\n    /**\n     * schema\n     */\n    get: function get() {\n      return JWTSchema;\n    }\n  }]);\n\n  return JWT;\n}(JSONDocument);\n\n/**\n * Export\n */\n\n\nmodule.exports = JWT;","'use strict';\n\n/**\n * Dependencies\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = require('@trust/json-document'),\n    JSONDocument = _require.JSONDocument;\n\nvar JWKSetSchema = require('../schemas/JWKSetSchema');\nvar JWK = require('./JWK');\n\n/**\n * JWKSet\n *\n * @class\n * JWKSet represents a JSON Web Key Set as described in Section 5 of RFC 7517:\n * https://tools.ietf.org/html/rfc7517#section-5\n */\n\nvar JWKSet = function (_JSONDocument) {\n  _inherits(JWKSet, _JSONDocument);\n\n  function JWKSet() {\n    _classCallCheck(this, JWKSet);\n\n    return _possibleConstructorReturn(this, (JWKSet.__proto__ || Object.getPrototypeOf(JWKSet)).apply(this, arguments));\n  }\n\n  _createClass(JWKSet, null, [{\n    key: 'importKeys',\n\n\n    /**\n     * importKeys\n     */\n    value: function importKeys(jwks) {\n      var validation = this.schema.validate(jwks);\n\n      if (!validation.valid) {\n        return Promise.reject(new Error('Invalid JWKSet: ' + JSON.stringify(validation, null, 2)));\n      }\n\n      if (!jwks.keys) {\n        return Promise.reject(new Error('Cannot import JWKSet: keys property is empty'));\n      }\n\n      var imported = void 0,\n          importing = void 0;\n\n      try {\n        imported = new JWKSet(jwks);\n        importing = jwks.keys.map(function (key) {\n          return JWK.importKey(key);\n        });\n      } catch (err) {\n        return Promise.reject(err);\n      }\n\n      return Promise.all(importing).then(function (keys) {\n        imported.keys = keys;\n        return imported;\n      });\n    }\n  }, {\n    key: 'schema',\n\n\n    /**\n     * schema\n     */\n    get: function get() {\n      return JWKSetSchema;\n    }\n  }]);\n\n  return JWKSet;\n}(JSONDocument);\n\n/**\n * Export\n */\n\n\nmodule.exports = JWKSet;","'use strict';\n\n/**\n * Package dependencies\n */\nvar _require = require('@trust/json-document'),\n    Formats = _require.Formats;\n\n/**\n * Format extensions\n */\n\n\nFormats.register('StringOrURI', new RegExp());\nFormats.register('NumericDate', new RegExp());\nFormats.register('URI', new RegExp());\nFormats.register('url', new RegExp());\nFormats.register('base64', new RegExp());\nFormats.register('base64url', new RegExp());\nFormats.register('MediaType', new RegExp());","'use strict';\n\n/**\n * Module dependencies\n * @ignore\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Initializer = require('./Initializer');\nvar Validator = require('./Validator');\n\n/**\n * JSONSchema\n *\n * @class\n * Compiles JSON Schema documents to an object with object initialization\n * and validation methods.\n */\n\nvar JSONSchema = function () {\n\n  /**\n   * Constructor\n   *\n   * @param {Object} schema\n   */\n  function JSONSchema(schema) {\n    _classCallCheck(this, JSONSchema);\n\n    // TODO: optionally parse JSON string?\n    Object.assign(this, schema);\n\n    // add schema-derived initialize and validate methods\n    Object.defineProperties(this, {\n      initialize: {\n        enumerable: false,\n        writeable: false,\n        value: Initializer.compile(schema)\n      },\n      validate: {\n        enumerable: false,\n        writeable: false,\n        value: Validator.compile(schema)\n      }\n    });\n  }\n\n  /**\n   * Extend\n   *\n   * @description\n   * ...\n   * Dear future,\n   *\n   * This function was meticulously plagiarized from some curious amalgam of\n   * stackoverflow posts whilst dozing off at my keyboard, too deprived of REM-\n   * sleep to recurse unassisted. If it sucks, you have only yourself to blame.\n   *\n   * Goodnight.\n   *\n   * @param {Object} schema\n   * @returns {JSONSchema}\n   */\n\n\n  _createClass(JSONSchema, [{\n    key: 'extend',\n    value: function extend(schema) {\n      function isObject(data) {\n        return data && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object' && data !== null && !Array.isArray(data);\n      }\n\n      function extender(target, source) {\n        var result = Object.assign({}, target);\n        if (isObject(target) && isObject(source)) {\n          Object.keys(source).forEach(function (key) {\n            if (isObject(source[key])) {\n              if (!(key in target)) {\n                Object.assign(result, _defineProperty({}, key, source[key]));\n              } else {\n                result[key] = extender(target[key], source[key]);\n              }\n            } else {\n              Object.assign(result, _defineProperty({}, key, source[key]));\n            }\n          });\n        }\n        return result;\n      }\n\n      var descriptor = extender(this, schema);\n      return new JSONSchema(descriptor);\n    }\n  }]);\n\n  return JSONSchema;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = JSONSchema;","'use strict';\n\n/**\n * Module dependencies\n * @ignore\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar JSONPointer = require('./JSONPointer');\n\n/**\n * JSONPointer mode\n */\nvar RECOVER = 1;\n\n/**\n * JSONMapping\n *\n * @class\n * Defines a means to declaratively translate between object\n * representations using JSON Pointer syntax.\n */\n\nvar JSONMapping = function () {\n\n  /**\n   * Constructor\n   *\n   * @description Translate pointers from JSON Strings into Pointer objects\n   * @param {Object} mapping\n   */\n  function JSONMapping(mapping) {\n    var _this = this;\n\n    _classCallCheck(this, JSONMapping);\n\n    Object.defineProperty(this, 'mapping', {\n      enumerable: false,\n      value: new Map()\n    });\n\n    Object.keys(mapping).forEach(function (key) {\n      var value = mapping[key];\n      _this.mapping.set(new JSONPointer(key, RECOVER), new JSONPointer(value, RECOVER));\n    });\n  }\n\n  /**\n   * Map\n   *\n   * @description Assign values from source to target by reading the mapping\n   * from right to left.\n   * @param {Object} target\n   * @param {Object} source\n   */\n\n\n  _createClass(JSONMapping, [{\n    key: 'map',\n    value: function map(target, source) {\n      this.mapping.forEach(function (right, left) {\n        left.add(target, right.get(source));\n      });\n    }\n\n    /**\n     * Project\n     *\n     * @description Assign values from source to target by reading the mapping\n     * from left to right.\n     * @param {Object} source\n     * @param {Object} target\n     */\n\n  }, {\n    key: 'project',\n    value: function project(source, target) {\n      this.mapping.forEach(function (right, left) {\n        right.add(target, left.get(source));\n      });\n    }\n  }]);\n\n  return JSONMapping;\n}();\n\n/**\n * Exports\n */\n\n\nmodule.exports = JSONMapping;","'use strict';\n\n/**\n * Module dependencies\n * @ignore\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar JSONPatch = require('./JSONPatch');\n\n/**\n * JSONDocument\n *\n * @class\n * JSONDocument is a high level interface that binds together all other features of\n * this package and provides the principle method of data modeling.\n */\n\nvar JSONDocument = function () {\n  _createClass(JSONDocument, null, [{\n    key: 'schema',\n\n\n    /**\n     * Schema\n     */\n    get: function get() {\n      throw new Error('Schema must be defined by classes extending JSONDocument');\n    }\n\n    /**\n     * Constructor\n     *\n     * @param {Object} data\n     * @param {Object} options\n     */\n\n  }]);\n\n  function JSONDocument() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, JSONDocument);\n\n    this.initialize(data, options);\n  }\n\n  /**\n   * Initialize\n   *\n   * @param {Object} data\n   * @param {Object} options\n   */\n\n\n  _createClass(JSONDocument, [{\n    key: 'initialize',\n    value: function initialize() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var schema = this.constructor.schema;\n\n      schema.initialize(this, data, options);\n    }\n\n    /**\n     * Validate\n     *\n     * @param {JSONSchema} alternate - OPTIONAL alternate schema\n     * @returns {Object}\n     */\n\n  }, {\n    key: 'validate',\n    value: function validate(alternate) {\n      var schema = this.constructor.schema;\n\n      return (alternate || schema).validate(this);\n    }\n\n    /**\n     * Patch\n     *\n     * @param {Array} ops\n     */\n\n  }, {\n    key: 'patch',\n    value: function patch(ops) {\n      var patch = new JSONPatch(ops);\n      patch.apply(this);\n    }\n\n    /**\n     * Select\n     */\n\n  }, {\n    key: 'select',\n    value: function select() {}\n\n    /**\n     * Project\n     *\n     * @description\n     * Given a mapping, return an object projected from the current instance.\n     *\n     * @example\n     * let schema = new JSONSchema({\n     *   properties: {\n     *     foo: { type: 'Array' }\n     *   }\n     * })\n     *\n     * let mapping = new JSONMapping({\n     *   '/foo/0': '/bar/baz'\n     * })\n     *\n     * class FooTracker extends JSONDocument {\n     *   static get schema () { return schema }\n     * }\n     *\n     * let instance = new FooTracker({ foo: ['qux'] })\n     * instance.project(mapping)\n     * // => { bar: { baz: 'qux' } }\n     *\n     * @param {JSONMapping} mapping\n     * @return {Object}\n     */\n\n  }, {\n    key: 'project',\n    value: function project(mapping) {\n      return mapping.project(this);\n    }\n\n    /**\n     * Serialize\n     *\n     * @param {Object} object\n     * @returns {string}\n     */\n\n  }], [{\n    key: 'serialize',\n    value: function serialize(object) {\n      return JSON.stringify(object);\n    }\n\n    /**\n     * Deserialize\n     *\n     * @param {string} data\n     * @return {*}\n     */\n\n  }, {\n    key: 'deserialize',\n    value: function deserialize(data) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        throw new Error('Failed to parse JSON');\n      }\n    }\n  }]);\n\n  return JSONDocument;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = JSONDocument;","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Dependencies\n */\nvar NotSupportedError = require('../errors/NotSupportedError');\n\n/**\n * Operations\n */\nvar operations = ['sign', 'verify', 'encrypt', 'decrypt', 'importKey'];\n\n/**\n * SupportedAlgorithms\n */\n\nvar SupportedAlgorithms = function () {\n\n  /**\n   * constructor\n   */\n  function SupportedAlgorithms() {\n    var _this = this;\n\n    _classCallCheck(this, SupportedAlgorithms);\n\n    operations.forEach(function (op) {\n      _this[op] = {};\n    });\n  }\n\n  /**\n   * Supported Operations\n   */\n\n\n  _createClass(SupportedAlgorithms, [{\n    key: 'define',\n\n\n    /**\n     * define\n     *\n     * @description\n     * Register Web Crypto API algorithm parameter for an algorithm\n     * and operation.\n     *\n     * @param {string} alg\n     * @param {string} op\n     * @param {Object} argument\n     */\n    value: function define(alg, op, argument) {\n      var registeredAlgorithms = this[op];\n      registeredAlgorithms[alg] = argument;\n    }\n\n    /**\n     * normalize\n     *\n     * @description\n     * Map JWA alg name to Web Crypto API algorithm parameter\n     *\n     * @param {string} op\n     * @param {Object} alg\n     *\n     * @returns {Object}\n     */\n\n  }, {\n    key: 'normalize',\n    value: function normalize(op, alg) {\n      var registeredAlgorithms = this[op];\n\n      if (!registeredAlgorithms) {\n        return new SyntaxError(); // what kind of error should this be?\n      }\n\n      var argument = registeredAlgorithms[alg];\n\n      if (!argument) {\n        return new NotSupportedError(alg);\n      }\n\n      return argument;\n    }\n  }], [{\n    key: 'operations',\n    get: function get() {\n      return operations;\n    }\n  }]);\n\n  return SupportedAlgorithms;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = SupportedAlgorithms;","'use strict';\n\n/**\n * Dependencies\n * @ignore\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar base64url = require('base64url');\nvar crypto = require('@trust/webcrypto');\nvar TextEncoder = require('../text-encoder');\n\n/**\n * RSASSA-PKCS1-v1_5\n */\n\nvar RSASSA_PKCS1_v1_5 = function () {\n\n  /**\n   * constructor\n   *\n   * @param {string} bitlength\n   */\n  function RSASSA_PKCS1_v1_5(params) {\n    _classCallCheck(this, RSASSA_PKCS1_v1_5);\n\n    this.params = params;\n  }\n\n  /**\n   * sign\n   *\n   * @description\n   * Generate a digital signature for a given input and private key.\n   *\n   * @param {CryptoKey} key\n   * @param {BufferSource} data\n   *\n   * @returns {Promise}\n   */\n\n\n  _createClass(RSASSA_PKCS1_v1_5, [{\n    key: 'sign',\n    value: function sign(key, data) {\n      var algorithm = this.params;\n\n      // TODO\n      //if (!this.sufficientKeySize()) {\n      //  return Promise.reject(\n      //    new Error(\n      //      'A key size of 2048 bits or larger must be used with RSASSA-PKCS1-v1_5'\n      //    )\n      //  )\n      //}\n\n      data = new TextEncoder().encode(data);\n\n      return crypto.subtle.sign(algorithm, key, data).then(function (signature) {\n        return base64url(Buffer.from(signature));\n      });\n    }\n\n    /**\n     * verify\n     *\n     * @description\n     * Verify a digital signature for a given input and private key.\n     *\n     * @param {CryptoKey} key\n     * @param {BufferSource} signature\n     * @param {BufferSource} data\n     *\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'verify',\n    value: function verify(key, signature, data) {\n      var algorithm = this.params;\n\n      if (typeof signature === 'string') {\n        signature = Uint8Array.from(base64url.toBuffer(signature));\n      }\n\n      if (typeof data === 'string') {\n        data = new TextEncoder().encode(data);\n      }\n      // ...\n\n      return crypto.subtle.verify(algorithm, key, signature, data);\n    }\n\n    /**\n     * importKey\n     *\n     * @param {JWK} key\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'importKey',\n    value: function importKey(key) {\n      var jwk = Object.assign({}, key);\n      var algorithm = this.params;\n      var usages = key['key_ops'] || [];\n\n      if (key.use === 'sig') {\n        usages.push('verify');\n      }\n\n      if (key.use === 'enc') {\n        // TODO: handle encryption keys\n        return Promise.resolve(key);\n      }\n\n      if (key.key_ops) {\n        usages = key.key_ops;\n      }\n\n      return crypto.subtle.importKey('jwk', jwk, algorithm, true, usages).then(function (cryptoKey) {\n        Object.defineProperty(jwk, 'cryptoKey', {\n          enumerable: false,\n          value: cryptoKey\n        });\n\n        return jwk;\n      });\n    }\n  }]);\n\n  return RSASSA_PKCS1_v1_5;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = RSASSA_PKCS1_v1_5;","module.exports = TextEncoder;","'use strict';\n\n/**\n * Dependencies\n * @ignore\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar base64url = require('base64url');\nvar crypto = require('@trust/webcrypto');\nvar TextEncoder = require('../text-encoder');\n\n/**\n * HMAC with SHA-2 Functions\n */\n\nvar HMAC = function () {\n\n  /**\n   * Constructor\n   *\n   * @param {string} bitlength\n   */\n  function HMAC(params) {\n    _classCallCheck(this, HMAC);\n\n    this.params = params;\n  }\n\n  /**\n   * Sign\n   *\n   * @description\n   * Generate a hash-based message authentication code for a\n   * given input and key. Enforce the key length is equal to\n   * or greater than the bitlength.\n   *\n   * @param {CryptoKey} key\n   * @param {string} data\n   *\n   * @returns {string}\n   */\n\n\n  _createClass(HMAC, [{\n    key: 'sign',\n    value: function sign(key, data) {\n      var algorithm = this.params;\n\n      // TODO: validate key length\n\n      data = new TextEncoder().encode(data);\n\n      return crypto.subtle.sign(algorithm, key, data).then(function (signature) {\n        return base64url(Buffer.from(signature));\n      });\n    }\n\n    /**\n     * Verify\n     *\n     * @description\n     * Verify a digital signature for a given input and private key.\n     *\n     * @param {CryptoKey} key\n     * @param {string} signature\n     * @param {string} data\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: 'verify',\n    value: function verify(key, signature, data) {\n      var algorithm = this.params;\n\n      if (typeof signature === 'string') {\n        signature = Uint8Array.from(base64url.toBuffer(signature));\n      }\n\n      if (typeof data === 'string') {\n        data = new TextEncoder().encode(data);\n      }\n\n      return crypto.subtle.verify(algorithm, key, signature, data);\n    }\n\n    /**\n     * Assert Sufficient Key Length\n     *\n     * @description Assert that the key length is sufficient\n     * @param {string} key\n     */\n\n  }, {\n    key: 'assertSufficientKeyLength',\n    value: function assertSufficientKeyLength(key) {\n      if (key.length < this.bitlength) {\n        throw new Error('The key is too short.');\n      }\n    }\n  }]);\n\n  return HMAC;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = HMAC;","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * None\n */\nvar None = function () {\n  function None() {\n    _classCallCheck(this, None);\n  }\n\n  _createClass(None, [{\n    key: 'sign',\n\n    /**\n     * sign\n     */\n    value: function sign() {\n      return Promise.resolve('');\n    }\n\n    /**\n     * verify\n     */\n\n  }, {\n    key: 'verify',\n    value: function verify() {\n      // this will never get called. but you looked.\n    }\n  }]);\n\n  return None;\n}();\n\n/**\n * Export\n */\n\n\nmodule.exports = None;","'use strict';\n\n/**\n * Local dependencies\n */\nvar None = require('./NONE');\nvar HMAC = require('./HMAC');\nvar RSASSA_PKCS1_v1_5 = require('./RSASSA-PKCS1-v1_5');\nvar SupportedAlgorithms = require('./SupportedAlgorithms');\n\n/**\n * Register Supported Algorithms\n */\nvar supportedAlgorithms = new SupportedAlgorithms();\n\n/**\n * Sign\n */\nsupportedAlgorithms.define('HS256', 'sign', new HMAC({\n  name: 'HMAC',\n  hash: {\n    name: 'SHA-256'\n  }\n}));\n\nsupportedAlgorithms.define('HS384', 'sign', new HMAC({\n  name: 'HMAC',\n  hash: {\n    name: 'SHA-384'\n  }\n}));\n\nsupportedAlgorithms.define('HS512', 'sign', new HMAC({\n  name: 'HMAC',\n  hash: {\n    name: 'SHA-512'\n  }\n}));\n\nsupportedAlgorithms.define('RS256', 'sign', new RSASSA_PKCS1_v1_5({\n  name: 'RSASSA-PKCS1-v1_5',\n  hash: {\n    name: 'SHA-256'\n  }\n}));\n\nsupportedAlgorithms.define('RS384', 'sign', new RSASSA_PKCS1_v1_5({\n  name: 'RSASSA-PKCS1-v1_5',\n  hash: {\n    name: 'SHA-384'\n  }\n}));\n\nsupportedAlgorithms.define('RS512', 'sign', new RSASSA_PKCS1_v1_5({\n  name: 'RSASSA-PKCS1-v1_5',\n  hash: {\n    name: 'SHA-512'\n  }\n}));\n//supportedAlgorithms.define('ES256', 'sign', {})\n//supportedAlgorithms.define('ES384', 'sign', {})\n//supportedAlgorithms.define('ES512', 'sign', {})\n//supportedAlgorithms.define('PS256', 'sign', {})\n//supportedAlgorithms.define('PS384', 'sign', {})\n//supportedAlgorithms.define('PS512', 'sign', {})\n\nsupportedAlgorithms.define('none', 'sign', new None({\n  // nothing goes here\n}));\n\n/**\n * Verify\n */\nsupportedAlgorithms.define('HS256', 'verify', new HMAC({\n  name: 'HMAC',\n  hash: {\n    name: 'SHA-256'\n  }\n}));\n\nsupportedAlgorithms.define('HS384', 'verify', new HMAC({\n  name: 'HMAC',\n  hash: {\n    name: 'SHA-384'\n  }\n}));\n\nsupportedAlgorithms.define('HS512', 'verify', new HMAC({\n  name: 'HMAC',\n  hash: {\n    name: 'SHA-512'\n  }\n}));\n\nsupportedAlgorithms.define('RS256', 'verify', new RSASSA_PKCS1_v1_5({\n  name: 'RSASSA-PKCS1-v1_5',\n  hash: {\n    name: 'SHA-256'\n  }\n}));\n\nsupportedAlgorithms.define('RS384', 'verify', new RSASSA_PKCS1_v1_5({\n  name: 'RSASSA-PKCS1-v1_5',\n  hash: {\n    name: 'SHA-384'\n  }\n}));\n\nsupportedAlgorithms.define('RS512', 'verify', new RSASSA_PKCS1_v1_5({\n  name: 'RSASSA-PKCS1-v1_5',\n  hash: {\n    name: 'SHA-512'\n  }\n}));\n//supportedAlgorithms.define('ES256', 'verify', {})\n//supportedAlgorithms.define('ES384', 'verify', {})\n//supportedAlgorithms.define('ES512', 'verify', {})\n//supportedAlgorithms.define('PS256', 'verify', {})\n//supportedAlgorithms.define('PS384', 'verify', {})\n//supportedAlgorithms.define('PS512', 'verify', {})\n\nsupportedAlgorithms.define('none', 'verify', new None({\n  // nothing goes here\n}));\n\nsupportedAlgorithms.define('RS256', 'importKey', new RSASSA_PKCS1_v1_5({\n  name: 'RSASSA-PKCS1-v1_5',\n  hash: {\n    name: 'SHA-256'\n  }\n}));\n\nsupportedAlgorithms.define('RS384', 'importKey', new RSASSA_PKCS1_v1_5({\n  name: 'RSASSA-PKCS1-v1_5',\n  hash: {\n    name: 'SHA-384'\n  }\n}));\n\nsupportedAlgorithms.define('RS512', 'importKey', new RSASSA_PKCS1_v1_5({\n  name: 'RSASSA-PKCS1-v1_5',\n  hash: {\n    name: 'SHA-512'\n  }\n}));\n\n/**\n * Export\n */\nmodule.exports = supportedAlgorithms;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction padString(input) {\n    let segmentLength = 4;\n    let stringLength = input.length;\n    let diff = stringLength % segmentLength;\n    if (!diff) {\n        return input;\n    }\n    let position = stringLength;\n    let padLength = segmentLength - diff;\n    let paddedStringLength = stringLength + padLength;\n    let buffer = Buffer.alloc(paddedStringLength);\n    buffer.write(input);\n    while (padLength--) {\n        buffer.write(\"=\", position++);\n    }\n    return buffer.toString();\n}\nexports.default = padString;\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst pad_string_1 = require(\"./pad-string\");\nfunction encode(input, encoding = \"utf8\") {\n    if (Buffer.isBuffer(input)) {\n        return fromBase64(input.toString(\"base64\"));\n    }\n    return fromBase64(Buffer.from(input, encoding).toString(\"base64\"));\n}\n;\nfunction decode(base64url, encoding = \"utf8\") {\n    return Buffer.from(toBase64(base64url), \"base64\").toString(encoding);\n}\nfunction toBase64(base64url) {\n    base64url = base64url.toString();\n    return pad_string_1.default(base64url)\n        .replace(/\\-/g, \"+\")\n        .replace(/_/g, \"/\");\n}\nfunction fromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction toBuffer(base64url) {\n    return Buffer.from(toBase64(base64url), \"base64\");\n}\nlet base64url = encode;\nbase64url.encode = encode;\nbase64url.decode = decode;\nbase64url.toBase64 = toBase64;\nbase64url.fromBase64 = fromBase64;\nbase64url.toBuffer = toBuffer;\nexports.default = base64url;\n","'use strict';\n\n/**\n * @module JSON Object Signing and Encryption (JOSE)\n */\nvar JWA = require('./jose/JWA');\nvar JWK = require('./jose/JWK');\nvar JWKSet = require('./jose/JWKSet');\nvar JWT = require('./jose/JWT');\nvar JWS = require('./jose/JWS');\nvar Base64URLSchema = require('./schemas/Base64URLSchema');\nvar JOSEHeaderSchema = require('./schemas/JOSEHeaderSchema');\nvar JWKSchema = require('./schemas/JWKSchema');\nvar JWKSetSchema = require('./schemas/JWKSetSchema');\nvar JWTClaimsSetSchema = require('./schemas/JWTClaimsSetSchema');\nvar JWTSchema = require('./schemas/JWTSchema');\n\n/**\n * Export\n */\nmodule.exports = {\n  JWA: JWA,\n  JWK: JWK,\n  JWKSet: JWKSet,\n  JWT: JWT,\n  JWS: JWS,\n  Base64URLSchema: Base64URLSchema,\n  JOSEHeaderSchema: JOSEHeaderSchema,\n  JWKSchema: JWKSchema,\n  JWKSetSchema: JWKSetSchema,\n  JWTClaimsSetSchema: JWTClaimsSetSchema,\n  JWTSchema: JWTSchema\n};"],"sourceRoot":""}